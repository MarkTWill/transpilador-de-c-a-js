Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> class_declaration program
Rule 2     program -> function_declaration program
Rule 3     program -> main_function program
Rule 4     program -> vacio
Rule 5     class_declaration -> CLASS ID LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA
Rule 6     class_body -> class_member
Rule 7     class_body -> class_body class_member
Rule 8     class_member -> access_specifier COLON class_member
Rule 9     class_member -> assignment_statement class_member
Rule 10    class_member -> function_declaration class_member
Rule 11    class_member -> constructor_declaration class_member
Rule 12    class_member -> destructor_declaration class_member
Rule 13    class_member -> vacio
Rule 14    access_specifier -> PUBLIC
Rule 15    access_specifier -> PRIVATE
Rule 16    access_specifier -> PROTECTED
Rule 17    constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
Rule 18    destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA
Rule 19    main_function -> INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
Rule 20    function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
Rule 21    function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR
Rule 22    function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA
Rule 23    statement_list -> statement
Rule 24    statement_list -> statement_list statement
Rule 25    statement -> assignment_statement
Rule 26    statement -> expression_statement
Rule 27    statement -> if
Rule 28    statement -> while
Rule 29    statement -> do_while
Rule 30    statement -> for
Rule 31    statement -> return
Rule 32    statement -> function_call PUNTO_Y_COMA
Rule 33    if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
Rule 34    if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
Rule 35    while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
Rule 36    do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA
Rule 37    for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
Rule 38    return -> RETURN expression PUNTO_Y_COMA
Rule 39    function_call -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER
Rule 40    argument_fun -> NUMERO COMA argument_fun
Rule 41    argument_fun -> ID COMA argument_fun
Rule 42    argument_fun -> vacio
Rule 43    argument_list -> expression
Rule 44    argument_list -> expression COMA argument_list
Rule 45    argument_list -> variable expression
Rule 46    argument_list -> variable expression COMA argument_list
Rule 47    argument_list -> vacio
Rule 48    assignment_statement -> variable ID PUNTO_Y_COMA
Rule 49    assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA
Rule 50    assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
Rule 51    assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA
Rule 52    variable -> INT
Rule 53    variable -> FLOAT
Rule 54    variable -> CHAR
Rule 55    variable -> DOUBLE
Rule 56    variable -> BOOLEAN
Rule 57    variable -> LONG
Rule 58    variable -> STRING
Rule 59    variable -> VOID
Rule 60    expression_statement -> expression PUNTO_Y_COMA
Rule 61    expression_statement -> COUT PRINT expression PUNTO_Y_COMA
Rule 62    expression -> expression SUMA expression
Rule 63    expression -> expression RESTA expression
Rule 64    expression -> expression MULTIPLICACION expression
Rule 65    expression -> expression DIVISION expression
Rule 66    expression -> expression MENOR_IGUAL expression
Rule 67    expression -> expression MAYOR_IGUAL expression
Rule 68    expression -> expression IGUAL expression
Rule 69    expression -> expression DISTINTO expression
Rule 70    expression -> expression AND expression
Rule 71    expression -> expression OR expression
Rule 72    expression -> NOT expression
Rule 73    expression -> PARENTESIS_IZQ expression PARENTESIS_DER
Rule 74    expression -> LLAVE_IZQ expression LLAVE_DER
Rule 75    expression -> NUMERO
Rule 76    expression -> CADENA
Rule 77    expression -> expression PRINT expression
Rule 78    expression -> COUT PRINT expression
Rule 79    expression -> expression MENOR expression
Rule 80    expression -> expression MAYOR expression
Rule 81    expression -> expression SUMA SUMA
Rule 82    expression -> ID
Rule 83    vacio -> <empty>

Terminals, with rules where they appear

AND                  : 70
ASIGNACION           : 37 49 50 51
BOOLEAN              : 56
CADENA               : 76
CHAR                 : 54
CLASS                : 5
COLON                : 8
COMA                 : 40 41 44 46
CORCHETE_DER         : 50
CORCHETE_IZQ         : 50
COUT                 : 61 78
DEST                 : 18
DISTINTO             : 69
DIVISION             : 65
DO                   : 36
DOUBLE               : 55
ELSE                 : 34
FLOAT                : 53
FOR                  : 37
ID                   : 5 17 18 20 21 22 37 39 41 48 49 50 51 82
IF                   : 33 34
IGUAL                : 68
INCLUDE              : 21
INT                  : 19 52
LLAVE_DER            : 5 17 19 20 33 34 34 35 36 37 50 74
LLAVE_IZQ            : 5 17 19 20 33 34 34 35 36 37 50 74
LONG                 : 57
MAIN                 : 19
MAYOR                : 21 80
MAYOR_IGUAL          : 67
MENOR                : 21 79
MENOR_IGUAL          : 66
MULTIPLICACION       : 64
NAMESPACE            : 22
NOT                  : 72
NUMERAL              : 21
NUMERO               : 40 75
OR                   : 71
PARENTESIS_DER       : 17 18 19 20 33 34 35 36 37 39 73
PARENTESIS_IZQ       : 17 18 19 20 33 34 35 36 37 39 73
PRINT                : 61 77 78
PRIVATE              : 15
PROTECTED            : 16
PUBLIC               : 14
PUNTO_Y_COMA         : 5 18 22 32 36 37 37 38 48 49 50 51 60 61
RESTA                : 63
RETURN               : 38
STRING               : 58
SUMA                 : 62 81 81
USING                : 22
VOID                 : 59
WHILE                : 35 36
error                : 

Nonterminals, with rules where they appear

access_specifier     : 8
argument_fun         : 40 41
argument_list        : 17 18 20 39 44 46 50
assignment_statement : 9 25
class_body           : 5 7
class_declaration    : 1
class_member         : 6 7 8 9 10 11 12
constructor_declaration : 11
destructor_declaration : 12
do_while             : 29
expression           : 33 34 35 36 37 37 37 38 43 44 45 46 49 50 51 60 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71 72 73 74 77 77 78 79 79 80 80 81
expression_statement : 26
for                  : 30
function_call        : 32
function_declaration : 2 10
if                   : 27
main_function        : 3
program              : 1 2 3 0
return               : 31
statement            : 23 24
statement_list       : 17 19 20 24 33 34 34 35 36 37
vacio                : 4 13 42 47
variable             : 20 37 45 46 48 49 50
while                : 28

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . class_declaration program
    (2) program -> . function_declaration program
    (3) program -> . main_function program
    (4) program -> . vacio
    (5) class_declaration -> . CLASS ID LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA
    (20) function_declaration -> . variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (21) function_declaration -> . NUMERAL INCLUDE MENOR ID MAYOR
    (22) function_declaration -> . USING NAMESPACE ID PUNTO_Y_COMA
    (19) main_function -> . INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (83) vacio -> .
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID

    CLASS           shift and go to state 6
    NUMERAL         shift and go to state 8
    USING           shift and go to state 9
    INT             shift and go to state 10
    $end            reduce using rule 83 (vacio -> .)
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17

    program                        shift and go to state 1
    class_declaration              shift and go to state 2
    function_declaration           shift and go to state 3
    main_function                  shift and go to state 4
    vacio                          shift and go to state 5
    variable                       shift and go to state 7

state 1

    (0) S' -> program .



state 2

    (1) program -> class_declaration . program
    (1) program -> . class_declaration program
    (2) program -> . function_declaration program
    (3) program -> . main_function program
    (4) program -> . vacio
    (5) class_declaration -> . CLASS ID LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA
    (20) function_declaration -> . variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (21) function_declaration -> . NUMERAL INCLUDE MENOR ID MAYOR
    (22) function_declaration -> . USING NAMESPACE ID PUNTO_Y_COMA
    (19) main_function -> . INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (83) vacio -> .
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID

    CLASS           shift and go to state 6
    NUMERAL         shift and go to state 8
    USING           shift and go to state 9
    INT             shift and go to state 10
    $end            reduce using rule 83 (vacio -> .)
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17

    class_declaration              shift and go to state 2
    program                        shift and go to state 18
    function_declaration           shift and go to state 3
    main_function                  shift and go to state 4
    vacio                          shift and go to state 5
    variable                       shift and go to state 7

state 3

    (2) program -> function_declaration . program
    (1) program -> . class_declaration program
    (2) program -> . function_declaration program
    (3) program -> . main_function program
    (4) program -> . vacio
    (5) class_declaration -> . CLASS ID LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA
    (20) function_declaration -> . variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (21) function_declaration -> . NUMERAL INCLUDE MENOR ID MAYOR
    (22) function_declaration -> . USING NAMESPACE ID PUNTO_Y_COMA
    (19) main_function -> . INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (83) vacio -> .
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID

    CLASS           shift and go to state 6
    NUMERAL         shift and go to state 8
    USING           shift and go to state 9
    INT             shift and go to state 10
    $end            reduce using rule 83 (vacio -> .)
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17

    function_declaration           shift and go to state 3
    program                        shift and go to state 19
    class_declaration              shift and go to state 2
    main_function                  shift and go to state 4
    vacio                          shift and go to state 5
    variable                       shift and go to state 7

state 4

    (3) program -> main_function . program
    (1) program -> . class_declaration program
    (2) program -> . function_declaration program
    (3) program -> . main_function program
    (4) program -> . vacio
    (5) class_declaration -> . CLASS ID LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA
    (20) function_declaration -> . variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (21) function_declaration -> . NUMERAL INCLUDE MENOR ID MAYOR
    (22) function_declaration -> . USING NAMESPACE ID PUNTO_Y_COMA
    (19) main_function -> . INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (83) vacio -> .
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID

    CLASS           shift and go to state 6
    NUMERAL         shift and go to state 8
    USING           shift and go to state 9
    INT             shift and go to state 10
    $end            reduce using rule 83 (vacio -> .)
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17

    main_function                  shift and go to state 4
    program                        shift and go to state 20
    class_declaration              shift and go to state 2
    function_declaration           shift and go to state 3
    vacio                          shift and go to state 5
    variable                       shift and go to state 7

state 5

    (4) program -> vacio .

    $end            reduce using rule 4 (program -> vacio .)


state 6

    (5) class_declaration -> CLASS . ID LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA

    ID              shift and go to state 21


state 7

    (20) function_declaration -> variable . ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER

    ID              shift and go to state 22


state 8

    (21) function_declaration -> NUMERAL . INCLUDE MENOR ID MAYOR

    INCLUDE         shift and go to state 23


state 9

    (22) function_declaration -> USING . NAMESPACE ID PUNTO_Y_COMA

    NAMESPACE       shift and go to state 24


state 10

    (19) main_function -> INT . MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (52) variable -> INT .

    MAIN            shift and go to state 25
    ID              reduce using rule 52 (variable -> INT .)


state 11

    (53) variable -> FLOAT .

    ID              reduce using rule 53 (variable -> FLOAT .)
    NOT             reduce using rule 53 (variable -> FLOAT .)
    PARENTESIS_IZQ  reduce using rule 53 (variable -> FLOAT .)
    LLAVE_IZQ       reduce using rule 53 (variable -> FLOAT .)
    NUMERO          reduce using rule 53 (variable -> FLOAT .)
    CADENA          reduce using rule 53 (variable -> FLOAT .)
    COUT            reduce using rule 53 (variable -> FLOAT .)


state 12

    (54) variable -> CHAR .

    ID              reduce using rule 54 (variable -> CHAR .)
    NOT             reduce using rule 54 (variable -> CHAR .)
    PARENTESIS_IZQ  reduce using rule 54 (variable -> CHAR .)
    LLAVE_IZQ       reduce using rule 54 (variable -> CHAR .)
    NUMERO          reduce using rule 54 (variable -> CHAR .)
    CADENA          reduce using rule 54 (variable -> CHAR .)
    COUT            reduce using rule 54 (variable -> CHAR .)


state 13

    (55) variable -> DOUBLE .

    ID              reduce using rule 55 (variable -> DOUBLE .)
    NOT             reduce using rule 55 (variable -> DOUBLE .)
    PARENTESIS_IZQ  reduce using rule 55 (variable -> DOUBLE .)
    LLAVE_IZQ       reduce using rule 55 (variable -> DOUBLE .)
    NUMERO          reduce using rule 55 (variable -> DOUBLE .)
    CADENA          reduce using rule 55 (variable -> DOUBLE .)
    COUT            reduce using rule 55 (variable -> DOUBLE .)


state 14

    (56) variable -> BOOLEAN .

    ID              reduce using rule 56 (variable -> BOOLEAN .)
    NOT             reduce using rule 56 (variable -> BOOLEAN .)
    PARENTESIS_IZQ  reduce using rule 56 (variable -> BOOLEAN .)
    LLAVE_IZQ       reduce using rule 56 (variable -> BOOLEAN .)
    NUMERO          reduce using rule 56 (variable -> BOOLEAN .)
    CADENA          reduce using rule 56 (variable -> BOOLEAN .)
    COUT            reduce using rule 56 (variable -> BOOLEAN .)


state 15

    (57) variable -> LONG .

    ID              reduce using rule 57 (variable -> LONG .)
    NOT             reduce using rule 57 (variable -> LONG .)
    PARENTESIS_IZQ  reduce using rule 57 (variable -> LONG .)
    LLAVE_IZQ       reduce using rule 57 (variable -> LONG .)
    NUMERO          reduce using rule 57 (variable -> LONG .)
    CADENA          reduce using rule 57 (variable -> LONG .)
    COUT            reduce using rule 57 (variable -> LONG .)


state 16

    (58) variable -> STRING .

    ID              reduce using rule 58 (variable -> STRING .)
    NOT             reduce using rule 58 (variable -> STRING .)
    PARENTESIS_IZQ  reduce using rule 58 (variable -> STRING .)
    LLAVE_IZQ       reduce using rule 58 (variable -> STRING .)
    NUMERO          reduce using rule 58 (variable -> STRING .)
    CADENA          reduce using rule 58 (variable -> STRING .)
    COUT            reduce using rule 58 (variable -> STRING .)


state 17

    (59) variable -> VOID .

    ID              reduce using rule 59 (variable -> VOID .)
    NOT             reduce using rule 59 (variable -> VOID .)
    PARENTESIS_IZQ  reduce using rule 59 (variable -> VOID .)
    LLAVE_IZQ       reduce using rule 59 (variable -> VOID .)
    NUMERO          reduce using rule 59 (variable -> VOID .)
    CADENA          reduce using rule 59 (variable -> VOID .)
    COUT            reduce using rule 59 (variable -> VOID .)


state 18

    (1) program -> class_declaration program .

    $end            reduce using rule 1 (program -> class_declaration program .)


state 19

    (2) program -> function_declaration program .

    $end            reduce using rule 2 (program -> function_declaration program .)


state 20

    (3) program -> main_function program .

    $end            reduce using rule 3 (program -> main_function program .)


state 21

    (5) class_declaration -> CLASS ID . LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA

    LLAVE_IZQ       shift and go to state 26


state 22

    (20) function_declaration -> variable ID . PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER

    PARENTESIS_IZQ  shift and go to state 27


state 23

    (21) function_declaration -> NUMERAL INCLUDE . MENOR ID MAYOR

    MENOR           shift and go to state 28


state 24

    (22) function_declaration -> USING NAMESPACE . ID PUNTO_Y_COMA

    ID              shift and go to state 29


state 25

    (19) main_function -> INT MAIN . PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER

    PARENTESIS_IZQ  shift and go to state 30


state 26

    (5) class_declaration -> CLASS ID LLAVE_IZQ . class_body LLAVE_DER PUNTO_Y_COMA
    (6) class_body -> . class_member
    (7) class_body -> . class_body class_member
    (8) class_member -> . access_specifier COLON class_member
    (9) class_member -> . assignment_statement class_member
    (10) class_member -> . function_declaration class_member
    (11) class_member -> . constructor_declaration class_member
    (12) class_member -> . destructor_declaration class_member
    (13) class_member -> . vacio
    (14) access_specifier -> . PUBLIC
    (15) access_specifier -> . PRIVATE
    (16) access_specifier -> . PROTECTED
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (20) function_declaration -> . variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (21) function_declaration -> . NUMERAL INCLUDE MENOR ID MAYOR
    (22) function_declaration -> . USING NAMESPACE ID PUNTO_Y_COMA
    (17) constructor_declaration -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (18) destructor_declaration -> . DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA
    (83) vacio -> .
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID

  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NUMERAL resolved as shift
  ! shift/reduce conflict for USING resolved as shift
  ! shift/reduce conflict for DEST resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 41
    PROTECTED       shift and go to state 42
    ID              shift and go to state 31
    NUMERAL         shift and go to state 8
    USING           shift and go to state 9
    DEST            shift and go to state 44
    LLAVE_DER       reduce using rule 83 (vacio -> .)
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17

  ! PUBLIC          [ reduce using rule 83 (vacio -> .) ]
  ! PRIVATE         [ reduce using rule 83 (vacio -> .) ]
  ! PROTECTED       [ reduce using rule 83 (vacio -> .) ]
  ! ID              [ reduce using rule 83 (vacio -> .) ]
  ! NUMERAL         [ reduce using rule 83 (vacio -> .) ]
  ! USING           [ reduce using rule 83 (vacio -> .) ]
  ! DEST            [ reduce using rule 83 (vacio -> .) ]
  ! INT             [ reduce using rule 83 (vacio -> .) ]
  ! FLOAT           [ reduce using rule 83 (vacio -> .) ]
  ! CHAR            [ reduce using rule 83 (vacio -> .) ]
  ! DOUBLE          [ reduce using rule 83 (vacio -> .) ]
  ! BOOLEAN         [ reduce using rule 83 (vacio -> .) ]
  ! LONG            [ reduce using rule 83 (vacio -> .) ]
  ! STRING          [ reduce using rule 83 (vacio -> .) ]
  ! VOID            [ reduce using rule 83 (vacio -> .) ]

    class_body                     shift and go to state 32
    class_member                   shift and go to state 33
    access_specifier               shift and go to state 34
    assignment_statement           shift and go to state 35
    function_declaration           shift and go to state 36
    constructor_declaration        shift and go to state 37
    destructor_declaration         shift and go to state 38
    vacio                          shift and go to state 39
    variable                       shift and go to state 43

state 27

    (20) function_declaration -> variable ID PARENTESIS_IZQ . argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (43) argument_list -> . expression
    (44) argument_list -> . expression COMA argument_list
    (45) argument_list -> . variable expression
    (46) argument_list -> . variable expression COMA argument_list
    (47) argument_list -> . vacio
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (83) vacio -> .

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    PARENTESIS_DER  reduce using rule 83 (vacio -> .)

    variable                       shift and go to state 46
    argument_list                  shift and go to state 49
    expression                     shift and go to state 51
    vacio                          shift and go to state 52

state 28

    (21) function_declaration -> NUMERAL INCLUDE MENOR . ID MAYOR

    ID              shift and go to state 57


state 29

    (22) function_declaration -> USING NAMESPACE ID . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 58


state 30

    (19) main_function -> INT MAIN PARENTESIS_IZQ . PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER

    PARENTESIS_DER  shift and go to state 59


state 31

    (51) assignment_statement -> ID . ASIGNACION expression PUNTO_Y_COMA
    (17) constructor_declaration -> ID . PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER

    ASIGNACION      shift and go to state 60
    PARENTESIS_IZQ  shift and go to state 61


state 32

    (5) class_declaration -> CLASS ID LLAVE_IZQ class_body . LLAVE_DER PUNTO_Y_COMA
    (7) class_body -> class_body . class_member
    (8) class_member -> . access_specifier COLON class_member
    (9) class_member -> . assignment_statement class_member
    (10) class_member -> . function_declaration class_member
    (11) class_member -> . constructor_declaration class_member
    (12) class_member -> . destructor_declaration class_member
    (13) class_member -> . vacio
    (14) access_specifier -> . PUBLIC
    (15) access_specifier -> . PRIVATE
    (16) access_specifier -> . PROTECTED
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (20) function_declaration -> . variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (21) function_declaration -> . NUMERAL INCLUDE MENOR ID MAYOR
    (22) function_declaration -> . USING NAMESPACE ID PUNTO_Y_COMA
    (17) constructor_declaration -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (18) destructor_declaration -> . DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA
    (83) vacio -> .
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID

  ! shift/reduce conflict for LLAVE_DER resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NUMERAL resolved as shift
  ! shift/reduce conflict for USING resolved as shift
  ! shift/reduce conflict for DEST resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
    LLAVE_DER       shift and go to state 62
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 41
    PROTECTED       shift and go to state 42
    ID              shift and go to state 31
    NUMERAL         shift and go to state 8
    USING           shift and go to state 9
    DEST            shift and go to state 44
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17

  ! LLAVE_DER       [ reduce using rule 83 (vacio -> .) ]
  ! PUBLIC          [ reduce using rule 83 (vacio -> .) ]
  ! PRIVATE         [ reduce using rule 83 (vacio -> .) ]
  ! PROTECTED       [ reduce using rule 83 (vacio -> .) ]
  ! ID              [ reduce using rule 83 (vacio -> .) ]
  ! NUMERAL         [ reduce using rule 83 (vacio -> .) ]
  ! USING           [ reduce using rule 83 (vacio -> .) ]
  ! DEST            [ reduce using rule 83 (vacio -> .) ]
  ! INT             [ reduce using rule 83 (vacio -> .) ]
  ! FLOAT           [ reduce using rule 83 (vacio -> .) ]
  ! CHAR            [ reduce using rule 83 (vacio -> .) ]
  ! DOUBLE          [ reduce using rule 83 (vacio -> .) ]
  ! BOOLEAN         [ reduce using rule 83 (vacio -> .) ]
  ! LONG            [ reduce using rule 83 (vacio -> .) ]
  ! STRING          [ reduce using rule 83 (vacio -> .) ]
  ! VOID            [ reduce using rule 83 (vacio -> .) ]

    class_member                   shift and go to state 63
    access_specifier               shift and go to state 34
    assignment_statement           shift and go to state 35
    function_declaration           shift and go to state 36
    constructor_declaration        shift and go to state 37
    destructor_declaration         shift and go to state 38
    vacio                          shift and go to state 39
    variable                       shift and go to state 43

state 33

    (6) class_body -> class_member .

    LLAVE_DER       reduce using rule 6 (class_body -> class_member .)
    PUBLIC          reduce using rule 6 (class_body -> class_member .)
    PRIVATE         reduce using rule 6 (class_body -> class_member .)
    PROTECTED       reduce using rule 6 (class_body -> class_member .)
    ID              reduce using rule 6 (class_body -> class_member .)
    NUMERAL         reduce using rule 6 (class_body -> class_member .)
    USING           reduce using rule 6 (class_body -> class_member .)
    DEST            reduce using rule 6 (class_body -> class_member .)
    INT             reduce using rule 6 (class_body -> class_member .)
    FLOAT           reduce using rule 6 (class_body -> class_member .)
    CHAR            reduce using rule 6 (class_body -> class_member .)
    DOUBLE          reduce using rule 6 (class_body -> class_member .)
    BOOLEAN         reduce using rule 6 (class_body -> class_member .)
    LONG            reduce using rule 6 (class_body -> class_member .)
    STRING          reduce using rule 6 (class_body -> class_member .)
    VOID            reduce using rule 6 (class_body -> class_member .)


state 34

    (8) class_member -> access_specifier . COLON class_member

    COLON           shift and go to state 64


state 35

    (9) class_member -> assignment_statement . class_member
    (8) class_member -> . access_specifier COLON class_member
    (9) class_member -> . assignment_statement class_member
    (10) class_member -> . function_declaration class_member
    (11) class_member -> . constructor_declaration class_member
    (12) class_member -> . destructor_declaration class_member
    (13) class_member -> . vacio
    (14) access_specifier -> . PUBLIC
    (15) access_specifier -> . PRIVATE
    (16) access_specifier -> . PROTECTED
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (20) function_declaration -> . variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (21) function_declaration -> . NUMERAL INCLUDE MENOR ID MAYOR
    (22) function_declaration -> . USING NAMESPACE ID PUNTO_Y_COMA
    (17) constructor_declaration -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (18) destructor_declaration -> . DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA
    (83) vacio -> .
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID

  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NUMERAL resolved as shift
  ! shift/reduce conflict for USING resolved as shift
  ! shift/reduce conflict for DEST resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 41
    PROTECTED       shift and go to state 42
    ID              shift and go to state 31
    NUMERAL         shift and go to state 8
    USING           shift and go to state 9
    DEST            shift and go to state 44
    LLAVE_DER       reduce using rule 83 (vacio -> .)
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17

  ! PUBLIC          [ reduce using rule 83 (vacio -> .) ]
  ! PRIVATE         [ reduce using rule 83 (vacio -> .) ]
  ! PROTECTED       [ reduce using rule 83 (vacio -> .) ]
  ! ID              [ reduce using rule 83 (vacio -> .) ]
  ! NUMERAL         [ reduce using rule 83 (vacio -> .) ]
  ! USING           [ reduce using rule 83 (vacio -> .) ]
  ! DEST            [ reduce using rule 83 (vacio -> .) ]
  ! INT             [ reduce using rule 83 (vacio -> .) ]
  ! FLOAT           [ reduce using rule 83 (vacio -> .) ]
  ! CHAR            [ reduce using rule 83 (vacio -> .) ]
  ! DOUBLE          [ reduce using rule 83 (vacio -> .) ]
  ! BOOLEAN         [ reduce using rule 83 (vacio -> .) ]
  ! LONG            [ reduce using rule 83 (vacio -> .) ]
  ! STRING          [ reduce using rule 83 (vacio -> .) ]
  ! VOID            [ reduce using rule 83 (vacio -> .) ]

    assignment_statement           shift and go to state 35
    class_member                   shift and go to state 65
    access_specifier               shift and go to state 34
    function_declaration           shift and go to state 36
    constructor_declaration        shift and go to state 37
    destructor_declaration         shift and go to state 38
    vacio                          shift and go to state 39
    variable                       shift and go to state 43

state 36

    (10) class_member -> function_declaration . class_member
    (8) class_member -> . access_specifier COLON class_member
    (9) class_member -> . assignment_statement class_member
    (10) class_member -> . function_declaration class_member
    (11) class_member -> . constructor_declaration class_member
    (12) class_member -> . destructor_declaration class_member
    (13) class_member -> . vacio
    (14) access_specifier -> . PUBLIC
    (15) access_specifier -> . PRIVATE
    (16) access_specifier -> . PROTECTED
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (20) function_declaration -> . variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (21) function_declaration -> . NUMERAL INCLUDE MENOR ID MAYOR
    (22) function_declaration -> . USING NAMESPACE ID PUNTO_Y_COMA
    (17) constructor_declaration -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (18) destructor_declaration -> . DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA
    (83) vacio -> .
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID

  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NUMERAL resolved as shift
  ! shift/reduce conflict for USING resolved as shift
  ! shift/reduce conflict for DEST resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 41
    PROTECTED       shift and go to state 42
    ID              shift and go to state 31
    NUMERAL         shift and go to state 8
    USING           shift and go to state 9
    DEST            shift and go to state 44
    LLAVE_DER       reduce using rule 83 (vacio -> .)
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17

  ! PUBLIC          [ reduce using rule 83 (vacio -> .) ]
  ! PRIVATE         [ reduce using rule 83 (vacio -> .) ]
  ! PROTECTED       [ reduce using rule 83 (vacio -> .) ]
  ! ID              [ reduce using rule 83 (vacio -> .) ]
  ! NUMERAL         [ reduce using rule 83 (vacio -> .) ]
  ! USING           [ reduce using rule 83 (vacio -> .) ]
  ! DEST            [ reduce using rule 83 (vacio -> .) ]
  ! INT             [ reduce using rule 83 (vacio -> .) ]
  ! FLOAT           [ reduce using rule 83 (vacio -> .) ]
  ! CHAR            [ reduce using rule 83 (vacio -> .) ]
  ! DOUBLE          [ reduce using rule 83 (vacio -> .) ]
  ! BOOLEAN         [ reduce using rule 83 (vacio -> .) ]
  ! LONG            [ reduce using rule 83 (vacio -> .) ]
  ! STRING          [ reduce using rule 83 (vacio -> .) ]
  ! VOID            [ reduce using rule 83 (vacio -> .) ]

    function_declaration           shift and go to state 36
    class_member                   shift and go to state 66
    access_specifier               shift and go to state 34
    assignment_statement           shift and go to state 35
    constructor_declaration        shift and go to state 37
    destructor_declaration         shift and go to state 38
    vacio                          shift and go to state 39
    variable                       shift and go to state 43

state 37

    (11) class_member -> constructor_declaration . class_member
    (8) class_member -> . access_specifier COLON class_member
    (9) class_member -> . assignment_statement class_member
    (10) class_member -> . function_declaration class_member
    (11) class_member -> . constructor_declaration class_member
    (12) class_member -> . destructor_declaration class_member
    (13) class_member -> . vacio
    (14) access_specifier -> . PUBLIC
    (15) access_specifier -> . PRIVATE
    (16) access_specifier -> . PROTECTED
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (20) function_declaration -> . variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (21) function_declaration -> . NUMERAL INCLUDE MENOR ID MAYOR
    (22) function_declaration -> . USING NAMESPACE ID PUNTO_Y_COMA
    (17) constructor_declaration -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (18) destructor_declaration -> . DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA
    (83) vacio -> .
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID

  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NUMERAL resolved as shift
  ! shift/reduce conflict for USING resolved as shift
  ! shift/reduce conflict for DEST resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 41
    PROTECTED       shift and go to state 42
    ID              shift and go to state 31
    NUMERAL         shift and go to state 8
    USING           shift and go to state 9
    DEST            shift and go to state 44
    LLAVE_DER       reduce using rule 83 (vacio -> .)
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17

  ! PUBLIC          [ reduce using rule 83 (vacio -> .) ]
  ! PRIVATE         [ reduce using rule 83 (vacio -> .) ]
  ! PROTECTED       [ reduce using rule 83 (vacio -> .) ]
  ! ID              [ reduce using rule 83 (vacio -> .) ]
  ! NUMERAL         [ reduce using rule 83 (vacio -> .) ]
  ! USING           [ reduce using rule 83 (vacio -> .) ]
  ! DEST            [ reduce using rule 83 (vacio -> .) ]
  ! INT             [ reduce using rule 83 (vacio -> .) ]
  ! FLOAT           [ reduce using rule 83 (vacio -> .) ]
  ! CHAR            [ reduce using rule 83 (vacio -> .) ]
  ! DOUBLE          [ reduce using rule 83 (vacio -> .) ]
  ! BOOLEAN         [ reduce using rule 83 (vacio -> .) ]
  ! LONG            [ reduce using rule 83 (vacio -> .) ]
  ! STRING          [ reduce using rule 83 (vacio -> .) ]
  ! VOID            [ reduce using rule 83 (vacio -> .) ]

    constructor_declaration        shift and go to state 37
    class_member                   shift and go to state 67
    access_specifier               shift and go to state 34
    assignment_statement           shift and go to state 35
    function_declaration           shift and go to state 36
    destructor_declaration         shift and go to state 38
    vacio                          shift and go to state 39
    variable                       shift and go to state 43

state 38

    (12) class_member -> destructor_declaration . class_member
    (8) class_member -> . access_specifier COLON class_member
    (9) class_member -> . assignment_statement class_member
    (10) class_member -> . function_declaration class_member
    (11) class_member -> . constructor_declaration class_member
    (12) class_member -> . destructor_declaration class_member
    (13) class_member -> . vacio
    (14) access_specifier -> . PUBLIC
    (15) access_specifier -> . PRIVATE
    (16) access_specifier -> . PROTECTED
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (20) function_declaration -> . variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (21) function_declaration -> . NUMERAL INCLUDE MENOR ID MAYOR
    (22) function_declaration -> . USING NAMESPACE ID PUNTO_Y_COMA
    (17) constructor_declaration -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (18) destructor_declaration -> . DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA
    (83) vacio -> .
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID

  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NUMERAL resolved as shift
  ! shift/reduce conflict for USING resolved as shift
  ! shift/reduce conflict for DEST resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 41
    PROTECTED       shift and go to state 42
    ID              shift and go to state 31
    NUMERAL         shift and go to state 8
    USING           shift and go to state 9
    DEST            shift and go to state 44
    LLAVE_DER       reduce using rule 83 (vacio -> .)
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17

  ! PUBLIC          [ reduce using rule 83 (vacio -> .) ]
  ! PRIVATE         [ reduce using rule 83 (vacio -> .) ]
  ! PROTECTED       [ reduce using rule 83 (vacio -> .) ]
  ! ID              [ reduce using rule 83 (vacio -> .) ]
  ! NUMERAL         [ reduce using rule 83 (vacio -> .) ]
  ! USING           [ reduce using rule 83 (vacio -> .) ]
  ! DEST            [ reduce using rule 83 (vacio -> .) ]
  ! INT             [ reduce using rule 83 (vacio -> .) ]
  ! FLOAT           [ reduce using rule 83 (vacio -> .) ]
  ! CHAR            [ reduce using rule 83 (vacio -> .) ]
  ! DOUBLE          [ reduce using rule 83 (vacio -> .) ]
  ! BOOLEAN         [ reduce using rule 83 (vacio -> .) ]
  ! LONG            [ reduce using rule 83 (vacio -> .) ]
  ! STRING          [ reduce using rule 83 (vacio -> .) ]
  ! VOID            [ reduce using rule 83 (vacio -> .) ]

    destructor_declaration         shift and go to state 38
    class_member                   shift and go to state 68
    access_specifier               shift and go to state 34
    assignment_statement           shift and go to state 35
    function_declaration           shift and go to state 36
    constructor_declaration        shift and go to state 37
    vacio                          shift and go to state 39
    variable                       shift and go to state 43

state 39

    (13) class_member -> vacio .

    LLAVE_DER       reduce using rule 13 (class_member -> vacio .)
    PUBLIC          reduce using rule 13 (class_member -> vacio .)
    PRIVATE         reduce using rule 13 (class_member -> vacio .)
    PROTECTED       reduce using rule 13 (class_member -> vacio .)
    ID              reduce using rule 13 (class_member -> vacio .)
    NUMERAL         reduce using rule 13 (class_member -> vacio .)
    USING           reduce using rule 13 (class_member -> vacio .)
    DEST            reduce using rule 13 (class_member -> vacio .)
    INT             reduce using rule 13 (class_member -> vacio .)
    FLOAT           reduce using rule 13 (class_member -> vacio .)
    CHAR            reduce using rule 13 (class_member -> vacio .)
    DOUBLE          reduce using rule 13 (class_member -> vacio .)
    BOOLEAN         reduce using rule 13 (class_member -> vacio .)
    LONG            reduce using rule 13 (class_member -> vacio .)
    STRING          reduce using rule 13 (class_member -> vacio .)
    VOID            reduce using rule 13 (class_member -> vacio .)


state 40

    (14) access_specifier -> PUBLIC .

    COLON           reduce using rule 14 (access_specifier -> PUBLIC .)


state 41

    (15) access_specifier -> PRIVATE .

    COLON           reduce using rule 15 (access_specifier -> PRIVATE .)


state 42

    (16) access_specifier -> PROTECTED .

    COLON           reduce using rule 16 (access_specifier -> PROTECTED .)


state 43

    (48) assignment_statement -> variable . ID PUNTO_Y_COMA
    (49) assignment_statement -> variable . ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> variable . ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (20) function_declaration -> variable . ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER

    ID              shift and go to state 69


state 44

    (18) destructor_declaration -> DEST . ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA

    ID              shift and go to state 70


state 45

    (52) variable -> INT .

    ID              reduce using rule 52 (variable -> INT .)
    NOT             reduce using rule 52 (variable -> INT .)
    PARENTESIS_IZQ  reduce using rule 52 (variable -> INT .)
    LLAVE_IZQ       reduce using rule 52 (variable -> INT .)
    NUMERO          reduce using rule 52 (variable -> INT .)
    CADENA          reduce using rule 52 (variable -> INT .)
    COUT            reduce using rule 52 (variable -> INT .)


state 46

    (45) argument_list -> variable . expression
    (46) argument_list -> variable . expression COMA argument_list
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 71

state 47

    (82) expression -> ID .

    COMA            reduce using rule 82 (expression -> ID .)
    SUMA            reduce using rule 82 (expression -> ID .)
    RESTA           reduce using rule 82 (expression -> ID .)
    MULTIPLICACION  reduce using rule 82 (expression -> ID .)
    DIVISION        reduce using rule 82 (expression -> ID .)
    MENOR_IGUAL     reduce using rule 82 (expression -> ID .)
    MAYOR_IGUAL     reduce using rule 82 (expression -> ID .)
    IGUAL           reduce using rule 82 (expression -> ID .)
    DISTINTO        reduce using rule 82 (expression -> ID .)
    AND             reduce using rule 82 (expression -> ID .)
    OR              reduce using rule 82 (expression -> ID .)
    PRINT           reduce using rule 82 (expression -> ID .)
    MENOR           reduce using rule 82 (expression -> ID .)
    MAYOR           reduce using rule 82 (expression -> ID .)
    PARENTESIS_DER  reduce using rule 82 (expression -> ID .)
    LLAVE_DER       reduce using rule 82 (expression -> ID .)
    PUNTO_Y_COMA    reduce using rule 82 (expression -> ID .)
    CORCHETE_DER    reduce using rule 82 (expression -> ID .)


state 48

    (73) expression -> PARENTESIS_IZQ . expression PARENTESIS_DER
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 72

state 49

    (20) function_declaration -> variable ID PARENTESIS_IZQ argument_list . PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER

    PARENTESIS_DER  shift and go to state 73


state 50

    (74) expression -> LLAVE_IZQ . expression LLAVE_DER
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 74

state 51

    (43) argument_list -> expression .
    (44) argument_list -> expression . COMA argument_list
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

    PARENTESIS_DER  reduce using rule 43 (argument_list -> expression .)
    LLAVE_DER       reduce using rule 43 (argument_list -> expression .)
    COMA            shift and go to state 75
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88


state 52

    (47) argument_list -> vacio .

    PARENTESIS_DER  reduce using rule 47 (argument_list -> vacio .)
    LLAVE_DER       reduce using rule 47 (argument_list -> vacio .)


state 53

    (72) expression -> NOT . expression
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 89

state 54

    (75) expression -> NUMERO .

    COMA            reduce using rule 75 (expression -> NUMERO .)
    SUMA            reduce using rule 75 (expression -> NUMERO .)
    RESTA           reduce using rule 75 (expression -> NUMERO .)
    MULTIPLICACION  reduce using rule 75 (expression -> NUMERO .)
    DIVISION        reduce using rule 75 (expression -> NUMERO .)
    MENOR_IGUAL     reduce using rule 75 (expression -> NUMERO .)
    MAYOR_IGUAL     reduce using rule 75 (expression -> NUMERO .)
    IGUAL           reduce using rule 75 (expression -> NUMERO .)
    DISTINTO        reduce using rule 75 (expression -> NUMERO .)
    AND             reduce using rule 75 (expression -> NUMERO .)
    OR              reduce using rule 75 (expression -> NUMERO .)
    PRINT           reduce using rule 75 (expression -> NUMERO .)
    MENOR           reduce using rule 75 (expression -> NUMERO .)
    MAYOR           reduce using rule 75 (expression -> NUMERO .)
    PARENTESIS_DER  reduce using rule 75 (expression -> NUMERO .)
    LLAVE_DER       reduce using rule 75 (expression -> NUMERO .)
    PUNTO_Y_COMA    reduce using rule 75 (expression -> NUMERO .)
    CORCHETE_DER    reduce using rule 75 (expression -> NUMERO .)


state 55

    (76) expression -> CADENA .

    COMA            reduce using rule 76 (expression -> CADENA .)
    SUMA            reduce using rule 76 (expression -> CADENA .)
    RESTA           reduce using rule 76 (expression -> CADENA .)
    MULTIPLICACION  reduce using rule 76 (expression -> CADENA .)
    DIVISION        reduce using rule 76 (expression -> CADENA .)
    MENOR_IGUAL     reduce using rule 76 (expression -> CADENA .)
    MAYOR_IGUAL     reduce using rule 76 (expression -> CADENA .)
    IGUAL           reduce using rule 76 (expression -> CADENA .)
    DISTINTO        reduce using rule 76 (expression -> CADENA .)
    AND             reduce using rule 76 (expression -> CADENA .)
    OR              reduce using rule 76 (expression -> CADENA .)
    PRINT           reduce using rule 76 (expression -> CADENA .)
    MENOR           reduce using rule 76 (expression -> CADENA .)
    MAYOR           reduce using rule 76 (expression -> CADENA .)
    PARENTESIS_DER  reduce using rule 76 (expression -> CADENA .)
    LLAVE_DER       reduce using rule 76 (expression -> CADENA .)
    PUNTO_Y_COMA    reduce using rule 76 (expression -> CADENA .)
    CORCHETE_DER    reduce using rule 76 (expression -> CADENA .)


state 56

    (78) expression -> COUT . PRINT expression

    PRINT           shift and go to state 90


state 57

    (21) function_declaration -> NUMERAL INCLUDE MENOR ID . MAYOR

    MAYOR           shift and go to state 91


state 58

    (22) function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA .

    CLASS           reduce using rule 22 (function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA .)
    NUMERAL         reduce using rule 22 (function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA .)
    USING           reduce using rule 22 (function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA .)
    INT             reduce using rule 22 (function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA .)
    FLOAT           reduce using rule 22 (function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA .)
    CHAR            reduce using rule 22 (function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 22 (function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 22 (function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA .)
    LONG            reduce using rule 22 (function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA .)
    STRING          reduce using rule 22 (function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA .)
    VOID            reduce using rule 22 (function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA .)
    $end            reduce using rule 22 (function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA .)
    PUBLIC          reduce using rule 22 (function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA .)
    PRIVATE         reduce using rule 22 (function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA .)
    PROTECTED       reduce using rule 22 (function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA .)
    ID              reduce using rule 22 (function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA .)
    DEST            reduce using rule 22 (function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA .)
    LLAVE_DER       reduce using rule 22 (function_declaration -> USING NAMESPACE ID PUNTO_Y_COMA .)


state 59

    (19) main_function -> INT MAIN PARENTESIS_IZQ PARENTESIS_DER . LLAVE_IZQ statement_list LLAVE_DER

    LLAVE_IZQ       shift and go to state 92


state 60

    (51) assignment_statement -> ID ASIGNACION . expression PUNTO_Y_COMA
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 93

state 61

    (17) constructor_declaration -> ID PARENTESIS_IZQ . argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (43) argument_list -> . expression
    (44) argument_list -> . expression COMA argument_list
    (45) argument_list -> . variable expression
    (46) argument_list -> . variable expression COMA argument_list
    (47) argument_list -> . vacio
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (83) vacio -> .

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    PARENTESIS_DER  reduce using rule 83 (vacio -> .)

    argument_list                  shift and go to state 94
    expression                     shift and go to state 51
    variable                       shift and go to state 46
    vacio                          shift and go to state 52

state 62

    (5) class_declaration -> CLASS ID LLAVE_IZQ class_body LLAVE_DER . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 95


state 63

    (7) class_body -> class_body class_member .

    LLAVE_DER       reduce using rule 7 (class_body -> class_body class_member .)
    PUBLIC          reduce using rule 7 (class_body -> class_body class_member .)
    PRIVATE         reduce using rule 7 (class_body -> class_body class_member .)
    PROTECTED       reduce using rule 7 (class_body -> class_body class_member .)
    ID              reduce using rule 7 (class_body -> class_body class_member .)
    NUMERAL         reduce using rule 7 (class_body -> class_body class_member .)
    USING           reduce using rule 7 (class_body -> class_body class_member .)
    DEST            reduce using rule 7 (class_body -> class_body class_member .)
    INT             reduce using rule 7 (class_body -> class_body class_member .)
    FLOAT           reduce using rule 7 (class_body -> class_body class_member .)
    CHAR            reduce using rule 7 (class_body -> class_body class_member .)
    DOUBLE          reduce using rule 7 (class_body -> class_body class_member .)
    BOOLEAN         reduce using rule 7 (class_body -> class_body class_member .)
    LONG            reduce using rule 7 (class_body -> class_body class_member .)
    STRING          reduce using rule 7 (class_body -> class_body class_member .)
    VOID            reduce using rule 7 (class_body -> class_body class_member .)


state 64

    (8) class_member -> access_specifier COLON . class_member
    (8) class_member -> . access_specifier COLON class_member
    (9) class_member -> . assignment_statement class_member
    (10) class_member -> . function_declaration class_member
    (11) class_member -> . constructor_declaration class_member
    (12) class_member -> . destructor_declaration class_member
    (13) class_member -> . vacio
    (14) access_specifier -> . PUBLIC
    (15) access_specifier -> . PRIVATE
    (16) access_specifier -> . PROTECTED
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (20) function_declaration -> . variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (21) function_declaration -> . NUMERAL INCLUDE MENOR ID MAYOR
    (22) function_declaration -> . USING NAMESPACE ID PUNTO_Y_COMA
    (17) constructor_declaration -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (18) destructor_declaration -> . DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA
    (83) vacio -> .
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID

  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for NUMERAL resolved as shift
  ! shift/reduce conflict for USING resolved as shift
  ! shift/reduce conflict for DEST resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for DOUBLE resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 41
    PROTECTED       shift and go to state 42
    ID              shift and go to state 31
    NUMERAL         shift and go to state 8
    USING           shift and go to state 9
    DEST            shift and go to state 44
    LLAVE_DER       reduce using rule 83 (vacio -> .)
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17

  ! PUBLIC          [ reduce using rule 83 (vacio -> .) ]
  ! PRIVATE         [ reduce using rule 83 (vacio -> .) ]
  ! PROTECTED       [ reduce using rule 83 (vacio -> .) ]
  ! ID              [ reduce using rule 83 (vacio -> .) ]
  ! NUMERAL         [ reduce using rule 83 (vacio -> .) ]
  ! USING           [ reduce using rule 83 (vacio -> .) ]
  ! DEST            [ reduce using rule 83 (vacio -> .) ]
  ! INT             [ reduce using rule 83 (vacio -> .) ]
  ! FLOAT           [ reduce using rule 83 (vacio -> .) ]
  ! CHAR            [ reduce using rule 83 (vacio -> .) ]
  ! DOUBLE          [ reduce using rule 83 (vacio -> .) ]
  ! BOOLEAN         [ reduce using rule 83 (vacio -> .) ]
  ! LONG            [ reduce using rule 83 (vacio -> .) ]
  ! STRING          [ reduce using rule 83 (vacio -> .) ]
  ! VOID            [ reduce using rule 83 (vacio -> .) ]

    access_specifier               shift and go to state 34
    class_member                   shift and go to state 96
    assignment_statement           shift and go to state 35
    function_declaration           shift and go to state 36
    constructor_declaration        shift and go to state 37
    destructor_declaration         shift and go to state 38
    vacio                          shift and go to state 39
    variable                       shift and go to state 43

state 65

    (9) class_member -> assignment_statement class_member .

    LLAVE_DER       reduce using rule 9 (class_member -> assignment_statement class_member .)
    PUBLIC          reduce using rule 9 (class_member -> assignment_statement class_member .)
    PRIVATE         reduce using rule 9 (class_member -> assignment_statement class_member .)
    PROTECTED       reduce using rule 9 (class_member -> assignment_statement class_member .)
    ID              reduce using rule 9 (class_member -> assignment_statement class_member .)
    NUMERAL         reduce using rule 9 (class_member -> assignment_statement class_member .)
    USING           reduce using rule 9 (class_member -> assignment_statement class_member .)
    DEST            reduce using rule 9 (class_member -> assignment_statement class_member .)
    INT             reduce using rule 9 (class_member -> assignment_statement class_member .)
    FLOAT           reduce using rule 9 (class_member -> assignment_statement class_member .)
    CHAR            reduce using rule 9 (class_member -> assignment_statement class_member .)
    DOUBLE          reduce using rule 9 (class_member -> assignment_statement class_member .)
    BOOLEAN         reduce using rule 9 (class_member -> assignment_statement class_member .)
    LONG            reduce using rule 9 (class_member -> assignment_statement class_member .)
    STRING          reduce using rule 9 (class_member -> assignment_statement class_member .)
    VOID            reduce using rule 9 (class_member -> assignment_statement class_member .)


state 66

    (10) class_member -> function_declaration class_member .

    LLAVE_DER       reduce using rule 10 (class_member -> function_declaration class_member .)
    PUBLIC          reduce using rule 10 (class_member -> function_declaration class_member .)
    PRIVATE         reduce using rule 10 (class_member -> function_declaration class_member .)
    PROTECTED       reduce using rule 10 (class_member -> function_declaration class_member .)
    ID              reduce using rule 10 (class_member -> function_declaration class_member .)
    NUMERAL         reduce using rule 10 (class_member -> function_declaration class_member .)
    USING           reduce using rule 10 (class_member -> function_declaration class_member .)
    DEST            reduce using rule 10 (class_member -> function_declaration class_member .)
    INT             reduce using rule 10 (class_member -> function_declaration class_member .)
    FLOAT           reduce using rule 10 (class_member -> function_declaration class_member .)
    CHAR            reduce using rule 10 (class_member -> function_declaration class_member .)
    DOUBLE          reduce using rule 10 (class_member -> function_declaration class_member .)
    BOOLEAN         reduce using rule 10 (class_member -> function_declaration class_member .)
    LONG            reduce using rule 10 (class_member -> function_declaration class_member .)
    STRING          reduce using rule 10 (class_member -> function_declaration class_member .)
    VOID            reduce using rule 10 (class_member -> function_declaration class_member .)


state 67

    (11) class_member -> constructor_declaration class_member .

    LLAVE_DER       reduce using rule 11 (class_member -> constructor_declaration class_member .)
    PUBLIC          reduce using rule 11 (class_member -> constructor_declaration class_member .)
    PRIVATE         reduce using rule 11 (class_member -> constructor_declaration class_member .)
    PROTECTED       reduce using rule 11 (class_member -> constructor_declaration class_member .)
    ID              reduce using rule 11 (class_member -> constructor_declaration class_member .)
    NUMERAL         reduce using rule 11 (class_member -> constructor_declaration class_member .)
    USING           reduce using rule 11 (class_member -> constructor_declaration class_member .)
    DEST            reduce using rule 11 (class_member -> constructor_declaration class_member .)
    INT             reduce using rule 11 (class_member -> constructor_declaration class_member .)
    FLOAT           reduce using rule 11 (class_member -> constructor_declaration class_member .)
    CHAR            reduce using rule 11 (class_member -> constructor_declaration class_member .)
    DOUBLE          reduce using rule 11 (class_member -> constructor_declaration class_member .)
    BOOLEAN         reduce using rule 11 (class_member -> constructor_declaration class_member .)
    LONG            reduce using rule 11 (class_member -> constructor_declaration class_member .)
    STRING          reduce using rule 11 (class_member -> constructor_declaration class_member .)
    VOID            reduce using rule 11 (class_member -> constructor_declaration class_member .)


state 68

    (12) class_member -> destructor_declaration class_member .

    LLAVE_DER       reduce using rule 12 (class_member -> destructor_declaration class_member .)
    PUBLIC          reduce using rule 12 (class_member -> destructor_declaration class_member .)
    PRIVATE         reduce using rule 12 (class_member -> destructor_declaration class_member .)
    PROTECTED       reduce using rule 12 (class_member -> destructor_declaration class_member .)
    ID              reduce using rule 12 (class_member -> destructor_declaration class_member .)
    NUMERAL         reduce using rule 12 (class_member -> destructor_declaration class_member .)
    USING           reduce using rule 12 (class_member -> destructor_declaration class_member .)
    DEST            reduce using rule 12 (class_member -> destructor_declaration class_member .)
    INT             reduce using rule 12 (class_member -> destructor_declaration class_member .)
    FLOAT           reduce using rule 12 (class_member -> destructor_declaration class_member .)
    CHAR            reduce using rule 12 (class_member -> destructor_declaration class_member .)
    DOUBLE          reduce using rule 12 (class_member -> destructor_declaration class_member .)
    BOOLEAN         reduce using rule 12 (class_member -> destructor_declaration class_member .)
    LONG            reduce using rule 12 (class_member -> destructor_declaration class_member .)
    STRING          reduce using rule 12 (class_member -> destructor_declaration class_member .)
    VOID            reduce using rule 12 (class_member -> destructor_declaration class_member .)


state 69

    (48) assignment_statement -> variable ID . PUNTO_Y_COMA
    (49) assignment_statement -> variable ID . ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> variable ID . CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (20) function_declaration -> variable ID . PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER

    PUNTO_Y_COMA    shift and go to state 97
    ASIGNACION      shift and go to state 98
    CORCHETE_IZQ    shift and go to state 99
    PARENTESIS_IZQ  shift and go to state 27


state 70

    (18) destructor_declaration -> DEST ID . PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA

    PARENTESIS_IZQ  shift and go to state 100


state 71

    (45) argument_list -> variable expression .
    (46) argument_list -> variable expression . COMA argument_list
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

    PARENTESIS_DER  reduce using rule 45 (argument_list -> variable expression .)
    LLAVE_DER       reduce using rule 45 (argument_list -> variable expression .)
    COMA            shift and go to state 101
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88


state 72

    (73) expression -> PARENTESIS_IZQ expression . PARENTESIS_DER
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

    PARENTESIS_DER  shift and go to state 102
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88


state 73

    (20) function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER . LLAVE_IZQ statement_list LLAVE_DER

    LLAVE_IZQ       shift and go to state 103


state 74

    (74) expression -> LLAVE_IZQ expression . LLAVE_DER
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

    LLAVE_DER       shift and go to state 104
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88


state 75

    (44) argument_list -> expression COMA . argument_list
    (43) argument_list -> . expression
    (44) argument_list -> . expression COMA argument_list
    (45) argument_list -> . variable expression
    (46) argument_list -> . variable expression COMA argument_list
    (47) argument_list -> . vacio
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (83) vacio -> .

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    PARENTESIS_DER  reduce using rule 83 (vacio -> .)
    LLAVE_DER       reduce using rule 83 (vacio -> .)

    expression                     shift and go to state 51
    argument_list                  shift and go to state 105
    variable                       shift and go to state 46
    vacio                          shift and go to state 52

state 76

    (62) expression -> expression SUMA . expression
    (81) expression -> expression SUMA . SUMA
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    SUMA            shift and go to state 107
    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 106

state 77

    (63) expression -> expression RESTA . expression
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 108

state 78

    (64) expression -> expression MULTIPLICACION . expression
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 109

state 79

    (65) expression -> expression DIVISION . expression
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 110

state 80

    (66) expression -> expression MENOR_IGUAL . expression
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 111

state 81

    (67) expression -> expression MAYOR_IGUAL . expression
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 112

state 82

    (68) expression -> expression IGUAL . expression
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 113

state 83

    (69) expression -> expression DISTINTO . expression
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 114

state 84

    (70) expression -> expression AND . expression
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 115

state 85

    (71) expression -> expression OR . expression
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 116

state 86

    (77) expression -> expression PRINT . expression
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 117

state 87

    (79) expression -> expression MENOR . expression
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 118

state 88

    (80) expression -> expression MAYOR . expression
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 119

state 89

    (72) expression -> NOT expression .
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DISTINTO resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
    COMA            reduce using rule 72 (expression -> NOT expression .)
    PARENTESIS_DER  reduce using rule 72 (expression -> NOT expression .)
    LLAVE_DER       reduce using rule 72 (expression -> NOT expression .)
    PUNTO_Y_COMA    reduce using rule 72 (expression -> NOT expression .)
    CORCHETE_DER    reduce using rule 72 (expression -> NOT expression .)
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88

  ! SUMA            [ reduce using rule 72 (expression -> NOT expression .) ]
  ! RESTA           [ reduce using rule 72 (expression -> NOT expression .) ]
  ! MULTIPLICACION  [ reduce using rule 72 (expression -> NOT expression .) ]
  ! DIVISION        [ reduce using rule 72 (expression -> NOT expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 72 (expression -> NOT expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 72 (expression -> NOT expression .) ]
  ! IGUAL           [ reduce using rule 72 (expression -> NOT expression .) ]
  ! DISTINTO        [ reduce using rule 72 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 72 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 72 (expression -> NOT expression .) ]
  ! PRINT           [ reduce using rule 72 (expression -> NOT expression .) ]
  ! MENOR           [ reduce using rule 72 (expression -> NOT expression .) ]
  ! MAYOR           [ reduce using rule 72 (expression -> NOT expression .) ]


state 90

    (78) expression -> COUT PRINT . expression
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 120

state 91

    (21) function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR .

    CLASS           reduce using rule 21 (function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR .)
    NUMERAL         reduce using rule 21 (function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR .)
    USING           reduce using rule 21 (function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR .)
    INT             reduce using rule 21 (function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR .)
    FLOAT           reduce using rule 21 (function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR .)
    CHAR            reduce using rule 21 (function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR .)
    DOUBLE          reduce using rule 21 (function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR .)
    BOOLEAN         reduce using rule 21 (function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR .)
    LONG            reduce using rule 21 (function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR .)
    STRING          reduce using rule 21 (function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR .)
    VOID            reduce using rule 21 (function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR .)
    $end            reduce using rule 21 (function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR .)
    PUBLIC          reduce using rule 21 (function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR .)
    PRIVATE         reduce using rule 21 (function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR .)
    PROTECTED       reduce using rule 21 (function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR .)
    ID              reduce using rule 21 (function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR .)
    DEST            reduce using rule 21 (function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR .)
    LLAVE_DER       reduce using rule 21 (function_declaration -> NUMERAL INCLUDE MENOR ID MAYOR .)


state 92

    (19) main_function -> INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ . statement_list LLAVE_DER
    (23) statement_list -> . statement
    (24) statement_list -> . statement_list statement
    (25) statement -> . assignment_statement
    (26) statement -> . expression_statement
    (27) statement -> . if
    (28) statement -> . while
    (29) statement -> . do_while
    (30) statement -> . for
    (31) statement -> . return
    (32) statement -> . function_call PUNTO_Y_COMA
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (60) expression_statement -> . expression PUNTO_Y_COMA
    (61) expression_statement -> . COUT PRINT expression PUNTO_Y_COMA
    (33) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (35) while -> . WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (36) do_while -> . DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA
    (37) for -> . FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (38) return -> . RETURN expression PUNTO_Y_COMA
    (39) function_call -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    ID              shift and go to state 132
    COUT            shift and go to state 134
    IF              shift and go to state 135
    WHILE           shift and go to state 136
    DO              shift and go to state 137
    FOR             shift and go to state 138
    RETURN          shift and go to state 139
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55

    statement_list                 shift and go to state 121
    statement                      shift and go to state 122
    assignment_statement           shift and go to state 123
    expression_statement           shift and go to state 124
    if                             shift and go to state 125
    while                          shift and go to state 126
    do_while                       shift and go to state 127
    for                            shift and go to state 128
    return                         shift and go to state 129
    function_call                  shift and go to state 130
    variable                       shift and go to state 131
    expression                     shift and go to state 133

state 93

    (51) assignment_statement -> ID ASIGNACION expression . PUNTO_Y_COMA
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

    PUNTO_Y_COMA    shift and go to state 140
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88


state 94

    (17) constructor_declaration -> ID PARENTESIS_IZQ argument_list . PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER

    PARENTESIS_DER  shift and go to state 141


state 95

    (5) class_declaration -> CLASS ID LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA .

    CLASS           reduce using rule 5 (class_declaration -> CLASS ID LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA .)
    NUMERAL         reduce using rule 5 (class_declaration -> CLASS ID LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA .)
    USING           reduce using rule 5 (class_declaration -> CLASS ID LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA .)
    INT             reduce using rule 5 (class_declaration -> CLASS ID LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA .)
    FLOAT           reduce using rule 5 (class_declaration -> CLASS ID LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA .)
    CHAR            reduce using rule 5 (class_declaration -> CLASS ID LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 5 (class_declaration -> CLASS ID LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 5 (class_declaration -> CLASS ID LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA .)
    LONG            reduce using rule 5 (class_declaration -> CLASS ID LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA .)
    STRING          reduce using rule 5 (class_declaration -> CLASS ID LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA .)
    VOID            reduce using rule 5 (class_declaration -> CLASS ID LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA .)
    $end            reduce using rule 5 (class_declaration -> CLASS ID LLAVE_IZQ class_body LLAVE_DER PUNTO_Y_COMA .)


state 96

    (8) class_member -> access_specifier COLON class_member .

    LLAVE_DER       reduce using rule 8 (class_member -> access_specifier COLON class_member .)
    PUBLIC          reduce using rule 8 (class_member -> access_specifier COLON class_member .)
    PRIVATE         reduce using rule 8 (class_member -> access_specifier COLON class_member .)
    PROTECTED       reduce using rule 8 (class_member -> access_specifier COLON class_member .)
    ID              reduce using rule 8 (class_member -> access_specifier COLON class_member .)
    NUMERAL         reduce using rule 8 (class_member -> access_specifier COLON class_member .)
    USING           reduce using rule 8 (class_member -> access_specifier COLON class_member .)
    DEST            reduce using rule 8 (class_member -> access_specifier COLON class_member .)
    INT             reduce using rule 8 (class_member -> access_specifier COLON class_member .)
    FLOAT           reduce using rule 8 (class_member -> access_specifier COLON class_member .)
    CHAR            reduce using rule 8 (class_member -> access_specifier COLON class_member .)
    DOUBLE          reduce using rule 8 (class_member -> access_specifier COLON class_member .)
    BOOLEAN         reduce using rule 8 (class_member -> access_specifier COLON class_member .)
    LONG            reduce using rule 8 (class_member -> access_specifier COLON class_member .)
    STRING          reduce using rule 8 (class_member -> access_specifier COLON class_member .)
    VOID            reduce using rule 8 (class_member -> access_specifier COLON class_member .)


state 97

    (48) assignment_statement -> variable ID PUNTO_Y_COMA .

    PUBLIC          reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    PRIVATE         reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    PROTECTED       reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    ID              reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    NUMERAL         reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    USING           reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    DEST            reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    INT             reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    FLOAT           reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    CHAR            reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    LONG            reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    STRING          reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    VOID            reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    LLAVE_DER       reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    COUT            reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    IF              reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    WHILE           reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    DO              reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    FOR             reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    RETURN          reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    NOT             reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    PARENTESIS_IZQ  reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    LLAVE_IZQ       reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    NUMERO          reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)
    CADENA          reduce using rule 48 (assignment_statement -> variable ID PUNTO_Y_COMA .)


state 98

    (49) assignment_statement -> variable ID ASIGNACION . expression PUNTO_Y_COMA
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 142

state 99

    (50) assignment_statement -> variable ID CORCHETE_IZQ . expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 143

state 100

    (18) destructor_declaration -> DEST ID PARENTESIS_IZQ . argument_list PARENTESIS_DER PUNTO_Y_COMA
    (43) argument_list -> . expression
    (44) argument_list -> . expression COMA argument_list
    (45) argument_list -> . variable expression
    (46) argument_list -> . variable expression COMA argument_list
    (47) argument_list -> . vacio
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (83) vacio -> .

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    PARENTESIS_DER  reduce using rule 83 (vacio -> .)

    argument_list                  shift and go to state 144
    expression                     shift and go to state 51
    variable                       shift and go to state 46
    vacio                          shift and go to state 52

state 101

    (46) argument_list -> variable expression COMA . argument_list
    (43) argument_list -> . expression
    (44) argument_list -> . expression COMA argument_list
    (45) argument_list -> . variable expression
    (46) argument_list -> . variable expression COMA argument_list
    (47) argument_list -> . vacio
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (83) vacio -> .

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    PARENTESIS_DER  reduce using rule 83 (vacio -> .)
    LLAVE_DER       reduce using rule 83 (vacio -> .)

    variable                       shift and go to state 46
    expression                     shift and go to state 51
    argument_list                  shift and go to state 145
    vacio                          shift and go to state 52

state 102

    (73) expression -> PARENTESIS_IZQ expression PARENTESIS_DER .

    COMA            reduce using rule 73 (expression -> PARENTESIS_IZQ expression PARENTESIS_DER .)
    SUMA            reduce using rule 73 (expression -> PARENTESIS_IZQ expression PARENTESIS_DER .)
    RESTA           reduce using rule 73 (expression -> PARENTESIS_IZQ expression PARENTESIS_DER .)
    MULTIPLICACION  reduce using rule 73 (expression -> PARENTESIS_IZQ expression PARENTESIS_DER .)
    DIVISION        reduce using rule 73 (expression -> PARENTESIS_IZQ expression PARENTESIS_DER .)
    MENOR_IGUAL     reduce using rule 73 (expression -> PARENTESIS_IZQ expression PARENTESIS_DER .)
    MAYOR_IGUAL     reduce using rule 73 (expression -> PARENTESIS_IZQ expression PARENTESIS_DER .)
    IGUAL           reduce using rule 73 (expression -> PARENTESIS_IZQ expression PARENTESIS_DER .)
    DISTINTO        reduce using rule 73 (expression -> PARENTESIS_IZQ expression PARENTESIS_DER .)
    AND             reduce using rule 73 (expression -> PARENTESIS_IZQ expression PARENTESIS_DER .)
    OR              reduce using rule 73 (expression -> PARENTESIS_IZQ expression PARENTESIS_DER .)
    PRINT           reduce using rule 73 (expression -> PARENTESIS_IZQ expression PARENTESIS_DER .)
    MENOR           reduce using rule 73 (expression -> PARENTESIS_IZQ expression PARENTESIS_DER .)
    MAYOR           reduce using rule 73 (expression -> PARENTESIS_IZQ expression PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 73 (expression -> PARENTESIS_IZQ expression PARENTESIS_DER .)
    LLAVE_DER       reduce using rule 73 (expression -> PARENTESIS_IZQ expression PARENTESIS_DER .)
    PUNTO_Y_COMA    reduce using rule 73 (expression -> PARENTESIS_IZQ expression PARENTESIS_DER .)
    CORCHETE_DER    reduce using rule 73 (expression -> PARENTESIS_IZQ expression PARENTESIS_DER .)


state 103

    (20) function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ . statement_list LLAVE_DER
    (23) statement_list -> . statement
    (24) statement_list -> . statement_list statement
    (25) statement -> . assignment_statement
    (26) statement -> . expression_statement
    (27) statement -> . if
    (28) statement -> . while
    (29) statement -> . do_while
    (30) statement -> . for
    (31) statement -> . return
    (32) statement -> . function_call PUNTO_Y_COMA
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (60) expression_statement -> . expression PUNTO_Y_COMA
    (61) expression_statement -> . COUT PRINT expression PUNTO_Y_COMA
    (33) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (35) while -> . WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (36) do_while -> . DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA
    (37) for -> . FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (38) return -> . RETURN expression PUNTO_Y_COMA
    (39) function_call -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    ID              shift and go to state 132
    COUT            shift and go to state 134
    IF              shift and go to state 135
    WHILE           shift and go to state 136
    DO              shift and go to state 137
    FOR             shift and go to state 138
    RETURN          shift and go to state 139
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55

    variable                       shift and go to state 131
    statement_list                 shift and go to state 146
    statement                      shift and go to state 122
    assignment_statement           shift and go to state 123
    expression_statement           shift and go to state 124
    if                             shift and go to state 125
    while                          shift and go to state 126
    do_while                       shift and go to state 127
    for                            shift and go to state 128
    return                         shift and go to state 129
    function_call                  shift and go to state 130
    expression                     shift and go to state 133

state 104

    (74) expression -> LLAVE_IZQ expression LLAVE_DER .

    COMA            reduce using rule 74 (expression -> LLAVE_IZQ expression LLAVE_DER .)
    SUMA            reduce using rule 74 (expression -> LLAVE_IZQ expression LLAVE_DER .)
    RESTA           reduce using rule 74 (expression -> LLAVE_IZQ expression LLAVE_DER .)
    MULTIPLICACION  reduce using rule 74 (expression -> LLAVE_IZQ expression LLAVE_DER .)
    DIVISION        reduce using rule 74 (expression -> LLAVE_IZQ expression LLAVE_DER .)
    MENOR_IGUAL     reduce using rule 74 (expression -> LLAVE_IZQ expression LLAVE_DER .)
    MAYOR_IGUAL     reduce using rule 74 (expression -> LLAVE_IZQ expression LLAVE_DER .)
    IGUAL           reduce using rule 74 (expression -> LLAVE_IZQ expression LLAVE_DER .)
    DISTINTO        reduce using rule 74 (expression -> LLAVE_IZQ expression LLAVE_DER .)
    AND             reduce using rule 74 (expression -> LLAVE_IZQ expression LLAVE_DER .)
    OR              reduce using rule 74 (expression -> LLAVE_IZQ expression LLAVE_DER .)
    PRINT           reduce using rule 74 (expression -> LLAVE_IZQ expression LLAVE_DER .)
    MENOR           reduce using rule 74 (expression -> LLAVE_IZQ expression LLAVE_DER .)
    MAYOR           reduce using rule 74 (expression -> LLAVE_IZQ expression LLAVE_DER .)
    PARENTESIS_DER  reduce using rule 74 (expression -> LLAVE_IZQ expression LLAVE_DER .)
    LLAVE_DER       reduce using rule 74 (expression -> LLAVE_IZQ expression LLAVE_DER .)
    PUNTO_Y_COMA    reduce using rule 74 (expression -> LLAVE_IZQ expression LLAVE_DER .)
    CORCHETE_DER    reduce using rule 74 (expression -> LLAVE_IZQ expression LLAVE_DER .)


state 105

    (44) argument_list -> expression COMA argument_list .

    PARENTESIS_DER  reduce using rule 44 (argument_list -> expression COMA argument_list .)
    LLAVE_DER       reduce using rule 44 (argument_list -> expression COMA argument_list .)


state 106

    (62) expression -> expression SUMA expression .
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

    COMA            reduce using rule 62 (expression -> expression SUMA expression .)
    SUMA            reduce using rule 62 (expression -> expression SUMA expression .)
    RESTA           reduce using rule 62 (expression -> expression SUMA expression .)
    MENOR_IGUAL     reduce using rule 62 (expression -> expression SUMA expression .)
    MAYOR_IGUAL     reduce using rule 62 (expression -> expression SUMA expression .)
    IGUAL           reduce using rule 62 (expression -> expression SUMA expression .)
    DISTINTO        reduce using rule 62 (expression -> expression SUMA expression .)
    AND             reduce using rule 62 (expression -> expression SUMA expression .)
    OR              reduce using rule 62 (expression -> expression SUMA expression .)
    PRINT           reduce using rule 62 (expression -> expression SUMA expression .)
    MENOR           reduce using rule 62 (expression -> expression SUMA expression .)
    MAYOR           reduce using rule 62 (expression -> expression SUMA expression .)
    PARENTESIS_DER  reduce using rule 62 (expression -> expression SUMA expression .)
    LLAVE_DER       reduce using rule 62 (expression -> expression SUMA expression .)
    PUNTO_Y_COMA    reduce using rule 62 (expression -> expression SUMA expression .)
    CORCHETE_DER    reduce using rule 62 (expression -> expression SUMA expression .)
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79

  ! MULTIPLICACION  [ reduce using rule 62 (expression -> expression SUMA expression .) ]
  ! DIVISION        [ reduce using rule 62 (expression -> expression SUMA expression .) ]
  ! SUMA            [ shift and go to state 76 ]
  ! RESTA           [ shift and go to state 77 ]
  ! MENOR_IGUAL     [ shift and go to state 80 ]
  ! MAYOR_IGUAL     [ shift and go to state 81 ]
  ! IGUAL           [ shift and go to state 82 ]
  ! DISTINTO        [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 85 ]
  ! PRINT           [ shift and go to state 86 ]
  ! MENOR           [ shift and go to state 87 ]
  ! MAYOR           [ shift and go to state 88 ]


state 107

    (81) expression -> expression SUMA SUMA .

    COMA            reduce using rule 81 (expression -> expression SUMA SUMA .)
    SUMA            reduce using rule 81 (expression -> expression SUMA SUMA .)
    RESTA           reduce using rule 81 (expression -> expression SUMA SUMA .)
    MULTIPLICACION  reduce using rule 81 (expression -> expression SUMA SUMA .)
    DIVISION        reduce using rule 81 (expression -> expression SUMA SUMA .)
    MENOR_IGUAL     reduce using rule 81 (expression -> expression SUMA SUMA .)
    MAYOR_IGUAL     reduce using rule 81 (expression -> expression SUMA SUMA .)
    IGUAL           reduce using rule 81 (expression -> expression SUMA SUMA .)
    DISTINTO        reduce using rule 81 (expression -> expression SUMA SUMA .)
    AND             reduce using rule 81 (expression -> expression SUMA SUMA .)
    OR              reduce using rule 81 (expression -> expression SUMA SUMA .)
    PRINT           reduce using rule 81 (expression -> expression SUMA SUMA .)
    MENOR           reduce using rule 81 (expression -> expression SUMA SUMA .)
    MAYOR           reduce using rule 81 (expression -> expression SUMA SUMA .)
    PARENTESIS_DER  reduce using rule 81 (expression -> expression SUMA SUMA .)
    LLAVE_DER       reduce using rule 81 (expression -> expression SUMA SUMA .)
    PUNTO_Y_COMA    reduce using rule 81 (expression -> expression SUMA SUMA .)
    CORCHETE_DER    reduce using rule 81 (expression -> expression SUMA SUMA .)


state 108

    (63) expression -> expression RESTA expression .
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

    COMA            reduce using rule 63 (expression -> expression RESTA expression .)
    SUMA            reduce using rule 63 (expression -> expression RESTA expression .)
    RESTA           reduce using rule 63 (expression -> expression RESTA expression .)
    MENOR_IGUAL     reduce using rule 63 (expression -> expression RESTA expression .)
    MAYOR_IGUAL     reduce using rule 63 (expression -> expression RESTA expression .)
    IGUAL           reduce using rule 63 (expression -> expression RESTA expression .)
    DISTINTO        reduce using rule 63 (expression -> expression RESTA expression .)
    AND             reduce using rule 63 (expression -> expression RESTA expression .)
    OR              reduce using rule 63 (expression -> expression RESTA expression .)
    PRINT           reduce using rule 63 (expression -> expression RESTA expression .)
    MENOR           reduce using rule 63 (expression -> expression RESTA expression .)
    MAYOR           reduce using rule 63 (expression -> expression RESTA expression .)
    PARENTESIS_DER  reduce using rule 63 (expression -> expression RESTA expression .)
    LLAVE_DER       reduce using rule 63 (expression -> expression RESTA expression .)
    PUNTO_Y_COMA    reduce using rule 63 (expression -> expression RESTA expression .)
    CORCHETE_DER    reduce using rule 63 (expression -> expression RESTA expression .)
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79

  ! MULTIPLICACION  [ reduce using rule 63 (expression -> expression RESTA expression .) ]
  ! DIVISION        [ reduce using rule 63 (expression -> expression RESTA expression .) ]
  ! SUMA            [ shift and go to state 76 ]
  ! RESTA           [ shift and go to state 77 ]
  ! MENOR_IGUAL     [ shift and go to state 80 ]
  ! MAYOR_IGUAL     [ shift and go to state 81 ]
  ! IGUAL           [ shift and go to state 82 ]
  ! DISTINTO        [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 85 ]
  ! PRINT           [ shift and go to state 86 ]
  ! MENOR           [ shift and go to state 87 ]
  ! MAYOR           [ shift and go to state 88 ]


state 109

    (64) expression -> expression MULTIPLICACION expression .
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

    COMA            reduce using rule 64 (expression -> expression MULTIPLICACION expression .)
    SUMA            reduce using rule 64 (expression -> expression MULTIPLICACION expression .)
    RESTA           reduce using rule 64 (expression -> expression MULTIPLICACION expression .)
    MULTIPLICACION  reduce using rule 64 (expression -> expression MULTIPLICACION expression .)
    DIVISION        reduce using rule 64 (expression -> expression MULTIPLICACION expression .)
    MENOR_IGUAL     reduce using rule 64 (expression -> expression MULTIPLICACION expression .)
    MAYOR_IGUAL     reduce using rule 64 (expression -> expression MULTIPLICACION expression .)
    IGUAL           reduce using rule 64 (expression -> expression MULTIPLICACION expression .)
    DISTINTO        reduce using rule 64 (expression -> expression MULTIPLICACION expression .)
    AND             reduce using rule 64 (expression -> expression MULTIPLICACION expression .)
    OR              reduce using rule 64 (expression -> expression MULTIPLICACION expression .)
    PRINT           reduce using rule 64 (expression -> expression MULTIPLICACION expression .)
    MENOR           reduce using rule 64 (expression -> expression MULTIPLICACION expression .)
    MAYOR           reduce using rule 64 (expression -> expression MULTIPLICACION expression .)
    PARENTESIS_DER  reduce using rule 64 (expression -> expression MULTIPLICACION expression .)
    LLAVE_DER       reduce using rule 64 (expression -> expression MULTIPLICACION expression .)
    PUNTO_Y_COMA    reduce using rule 64 (expression -> expression MULTIPLICACION expression .)
    CORCHETE_DER    reduce using rule 64 (expression -> expression MULTIPLICACION expression .)

  ! SUMA            [ shift and go to state 76 ]
  ! RESTA           [ shift and go to state 77 ]
  ! MULTIPLICACION  [ shift and go to state 78 ]
  ! DIVISION        [ shift and go to state 79 ]
  ! MENOR_IGUAL     [ shift and go to state 80 ]
  ! MAYOR_IGUAL     [ shift and go to state 81 ]
  ! IGUAL           [ shift and go to state 82 ]
  ! DISTINTO        [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 85 ]
  ! PRINT           [ shift and go to state 86 ]
  ! MENOR           [ shift and go to state 87 ]
  ! MAYOR           [ shift and go to state 88 ]


state 110

    (65) expression -> expression DIVISION expression .
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

    COMA            reduce using rule 65 (expression -> expression DIVISION expression .)
    SUMA            reduce using rule 65 (expression -> expression DIVISION expression .)
    RESTA           reduce using rule 65 (expression -> expression DIVISION expression .)
    MULTIPLICACION  reduce using rule 65 (expression -> expression DIVISION expression .)
    DIVISION        reduce using rule 65 (expression -> expression DIVISION expression .)
    MENOR_IGUAL     reduce using rule 65 (expression -> expression DIVISION expression .)
    MAYOR_IGUAL     reduce using rule 65 (expression -> expression DIVISION expression .)
    IGUAL           reduce using rule 65 (expression -> expression DIVISION expression .)
    DISTINTO        reduce using rule 65 (expression -> expression DIVISION expression .)
    AND             reduce using rule 65 (expression -> expression DIVISION expression .)
    OR              reduce using rule 65 (expression -> expression DIVISION expression .)
    PRINT           reduce using rule 65 (expression -> expression DIVISION expression .)
    MENOR           reduce using rule 65 (expression -> expression DIVISION expression .)
    MAYOR           reduce using rule 65 (expression -> expression DIVISION expression .)
    PARENTESIS_DER  reduce using rule 65 (expression -> expression DIVISION expression .)
    LLAVE_DER       reduce using rule 65 (expression -> expression DIVISION expression .)
    PUNTO_Y_COMA    reduce using rule 65 (expression -> expression DIVISION expression .)
    CORCHETE_DER    reduce using rule 65 (expression -> expression DIVISION expression .)

  ! SUMA            [ shift and go to state 76 ]
  ! RESTA           [ shift and go to state 77 ]
  ! MULTIPLICACION  [ shift and go to state 78 ]
  ! DIVISION        [ shift and go to state 79 ]
  ! MENOR_IGUAL     [ shift and go to state 80 ]
  ! MAYOR_IGUAL     [ shift and go to state 81 ]
  ! IGUAL           [ shift and go to state 82 ]
  ! DISTINTO        [ shift and go to state 83 ]
  ! AND             [ shift and go to state 84 ]
  ! OR              [ shift and go to state 85 ]
  ! PRINT           [ shift and go to state 86 ]
  ! MENOR           [ shift and go to state 87 ]
  ! MAYOR           [ shift and go to state 88 ]


state 111

    (66) expression -> expression MENOR_IGUAL expression .
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DISTINTO resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
    COMA            reduce using rule 66 (expression -> expression MENOR_IGUAL expression .)
    PARENTESIS_DER  reduce using rule 66 (expression -> expression MENOR_IGUAL expression .)
    LLAVE_DER       reduce using rule 66 (expression -> expression MENOR_IGUAL expression .)
    PUNTO_Y_COMA    reduce using rule 66 (expression -> expression MENOR_IGUAL expression .)
    CORCHETE_DER    reduce using rule 66 (expression -> expression MENOR_IGUAL expression .)
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88

  ! SUMA            [ reduce using rule 66 (expression -> expression MENOR_IGUAL expression .) ]
  ! RESTA           [ reduce using rule 66 (expression -> expression MENOR_IGUAL expression .) ]
  ! MULTIPLICACION  [ reduce using rule 66 (expression -> expression MENOR_IGUAL expression .) ]
  ! DIVISION        [ reduce using rule 66 (expression -> expression MENOR_IGUAL expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 66 (expression -> expression MENOR_IGUAL expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 66 (expression -> expression MENOR_IGUAL expression .) ]
  ! IGUAL           [ reduce using rule 66 (expression -> expression MENOR_IGUAL expression .) ]
  ! DISTINTO        [ reduce using rule 66 (expression -> expression MENOR_IGUAL expression .) ]
  ! AND             [ reduce using rule 66 (expression -> expression MENOR_IGUAL expression .) ]
  ! OR              [ reduce using rule 66 (expression -> expression MENOR_IGUAL expression .) ]
  ! PRINT           [ reduce using rule 66 (expression -> expression MENOR_IGUAL expression .) ]
  ! MENOR           [ reduce using rule 66 (expression -> expression MENOR_IGUAL expression .) ]
  ! MAYOR           [ reduce using rule 66 (expression -> expression MENOR_IGUAL expression .) ]


state 112

    (67) expression -> expression MAYOR_IGUAL expression .
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DISTINTO resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
    COMA            reduce using rule 67 (expression -> expression MAYOR_IGUAL expression .)
    PARENTESIS_DER  reduce using rule 67 (expression -> expression MAYOR_IGUAL expression .)
    LLAVE_DER       reduce using rule 67 (expression -> expression MAYOR_IGUAL expression .)
    PUNTO_Y_COMA    reduce using rule 67 (expression -> expression MAYOR_IGUAL expression .)
    CORCHETE_DER    reduce using rule 67 (expression -> expression MAYOR_IGUAL expression .)
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88

  ! SUMA            [ reduce using rule 67 (expression -> expression MAYOR_IGUAL expression .) ]
  ! RESTA           [ reduce using rule 67 (expression -> expression MAYOR_IGUAL expression .) ]
  ! MULTIPLICACION  [ reduce using rule 67 (expression -> expression MAYOR_IGUAL expression .) ]
  ! DIVISION        [ reduce using rule 67 (expression -> expression MAYOR_IGUAL expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 67 (expression -> expression MAYOR_IGUAL expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 67 (expression -> expression MAYOR_IGUAL expression .) ]
  ! IGUAL           [ reduce using rule 67 (expression -> expression MAYOR_IGUAL expression .) ]
  ! DISTINTO        [ reduce using rule 67 (expression -> expression MAYOR_IGUAL expression .) ]
  ! AND             [ reduce using rule 67 (expression -> expression MAYOR_IGUAL expression .) ]
  ! OR              [ reduce using rule 67 (expression -> expression MAYOR_IGUAL expression .) ]
  ! PRINT           [ reduce using rule 67 (expression -> expression MAYOR_IGUAL expression .) ]
  ! MENOR           [ reduce using rule 67 (expression -> expression MAYOR_IGUAL expression .) ]
  ! MAYOR           [ reduce using rule 67 (expression -> expression MAYOR_IGUAL expression .) ]


state 113

    (68) expression -> expression IGUAL expression .
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DISTINTO resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
    COMA            reduce using rule 68 (expression -> expression IGUAL expression .)
    PARENTESIS_DER  reduce using rule 68 (expression -> expression IGUAL expression .)
    LLAVE_DER       reduce using rule 68 (expression -> expression IGUAL expression .)
    PUNTO_Y_COMA    reduce using rule 68 (expression -> expression IGUAL expression .)
    CORCHETE_DER    reduce using rule 68 (expression -> expression IGUAL expression .)
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88

  ! SUMA            [ reduce using rule 68 (expression -> expression IGUAL expression .) ]
  ! RESTA           [ reduce using rule 68 (expression -> expression IGUAL expression .) ]
  ! MULTIPLICACION  [ reduce using rule 68 (expression -> expression IGUAL expression .) ]
  ! DIVISION        [ reduce using rule 68 (expression -> expression IGUAL expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 68 (expression -> expression IGUAL expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 68 (expression -> expression IGUAL expression .) ]
  ! IGUAL           [ reduce using rule 68 (expression -> expression IGUAL expression .) ]
  ! DISTINTO        [ reduce using rule 68 (expression -> expression IGUAL expression .) ]
  ! AND             [ reduce using rule 68 (expression -> expression IGUAL expression .) ]
  ! OR              [ reduce using rule 68 (expression -> expression IGUAL expression .) ]
  ! PRINT           [ reduce using rule 68 (expression -> expression IGUAL expression .) ]
  ! MENOR           [ reduce using rule 68 (expression -> expression IGUAL expression .) ]
  ! MAYOR           [ reduce using rule 68 (expression -> expression IGUAL expression .) ]


state 114

    (69) expression -> expression DISTINTO expression .
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DISTINTO resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
    COMA            reduce using rule 69 (expression -> expression DISTINTO expression .)
    PARENTESIS_DER  reduce using rule 69 (expression -> expression DISTINTO expression .)
    LLAVE_DER       reduce using rule 69 (expression -> expression DISTINTO expression .)
    PUNTO_Y_COMA    reduce using rule 69 (expression -> expression DISTINTO expression .)
    CORCHETE_DER    reduce using rule 69 (expression -> expression DISTINTO expression .)
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88

  ! SUMA            [ reduce using rule 69 (expression -> expression DISTINTO expression .) ]
  ! RESTA           [ reduce using rule 69 (expression -> expression DISTINTO expression .) ]
  ! MULTIPLICACION  [ reduce using rule 69 (expression -> expression DISTINTO expression .) ]
  ! DIVISION        [ reduce using rule 69 (expression -> expression DISTINTO expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 69 (expression -> expression DISTINTO expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 69 (expression -> expression DISTINTO expression .) ]
  ! IGUAL           [ reduce using rule 69 (expression -> expression DISTINTO expression .) ]
  ! DISTINTO        [ reduce using rule 69 (expression -> expression DISTINTO expression .) ]
  ! AND             [ reduce using rule 69 (expression -> expression DISTINTO expression .) ]
  ! OR              [ reduce using rule 69 (expression -> expression DISTINTO expression .) ]
  ! PRINT           [ reduce using rule 69 (expression -> expression DISTINTO expression .) ]
  ! MENOR           [ reduce using rule 69 (expression -> expression DISTINTO expression .) ]
  ! MAYOR           [ reduce using rule 69 (expression -> expression DISTINTO expression .) ]


state 115

    (70) expression -> expression AND expression .
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DISTINTO resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
    COMA            reduce using rule 70 (expression -> expression AND expression .)
    PARENTESIS_DER  reduce using rule 70 (expression -> expression AND expression .)
    LLAVE_DER       reduce using rule 70 (expression -> expression AND expression .)
    PUNTO_Y_COMA    reduce using rule 70 (expression -> expression AND expression .)
    CORCHETE_DER    reduce using rule 70 (expression -> expression AND expression .)
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88

  ! SUMA            [ reduce using rule 70 (expression -> expression AND expression .) ]
  ! RESTA           [ reduce using rule 70 (expression -> expression AND expression .) ]
  ! MULTIPLICACION  [ reduce using rule 70 (expression -> expression AND expression .) ]
  ! DIVISION        [ reduce using rule 70 (expression -> expression AND expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 70 (expression -> expression AND expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 70 (expression -> expression AND expression .) ]
  ! IGUAL           [ reduce using rule 70 (expression -> expression AND expression .) ]
  ! DISTINTO        [ reduce using rule 70 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 70 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 70 (expression -> expression AND expression .) ]
  ! PRINT           [ reduce using rule 70 (expression -> expression AND expression .) ]
  ! MENOR           [ reduce using rule 70 (expression -> expression AND expression .) ]
  ! MAYOR           [ reduce using rule 70 (expression -> expression AND expression .) ]


state 116

    (71) expression -> expression OR expression .
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DISTINTO resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
    COMA            reduce using rule 71 (expression -> expression OR expression .)
    PARENTESIS_DER  reduce using rule 71 (expression -> expression OR expression .)
    LLAVE_DER       reduce using rule 71 (expression -> expression OR expression .)
    PUNTO_Y_COMA    reduce using rule 71 (expression -> expression OR expression .)
    CORCHETE_DER    reduce using rule 71 (expression -> expression OR expression .)
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88

  ! SUMA            [ reduce using rule 71 (expression -> expression OR expression .) ]
  ! RESTA           [ reduce using rule 71 (expression -> expression OR expression .) ]
  ! MULTIPLICACION  [ reduce using rule 71 (expression -> expression OR expression .) ]
  ! DIVISION        [ reduce using rule 71 (expression -> expression OR expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 71 (expression -> expression OR expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 71 (expression -> expression OR expression .) ]
  ! IGUAL           [ reduce using rule 71 (expression -> expression OR expression .) ]
  ! DISTINTO        [ reduce using rule 71 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 71 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 71 (expression -> expression OR expression .) ]
  ! PRINT           [ reduce using rule 71 (expression -> expression OR expression .) ]
  ! MENOR           [ reduce using rule 71 (expression -> expression OR expression .) ]
  ! MAYOR           [ reduce using rule 71 (expression -> expression OR expression .) ]


state 117

    (77) expression -> expression PRINT expression .
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DISTINTO resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
    COMA            reduce using rule 77 (expression -> expression PRINT expression .)
    PARENTESIS_DER  reduce using rule 77 (expression -> expression PRINT expression .)
    LLAVE_DER       reduce using rule 77 (expression -> expression PRINT expression .)
    PUNTO_Y_COMA    reduce using rule 77 (expression -> expression PRINT expression .)
    CORCHETE_DER    reduce using rule 77 (expression -> expression PRINT expression .)
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88

  ! SUMA            [ reduce using rule 77 (expression -> expression PRINT expression .) ]
  ! RESTA           [ reduce using rule 77 (expression -> expression PRINT expression .) ]
  ! MULTIPLICACION  [ reduce using rule 77 (expression -> expression PRINT expression .) ]
  ! DIVISION        [ reduce using rule 77 (expression -> expression PRINT expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 77 (expression -> expression PRINT expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 77 (expression -> expression PRINT expression .) ]
  ! IGUAL           [ reduce using rule 77 (expression -> expression PRINT expression .) ]
  ! DISTINTO        [ reduce using rule 77 (expression -> expression PRINT expression .) ]
  ! AND             [ reduce using rule 77 (expression -> expression PRINT expression .) ]
  ! OR              [ reduce using rule 77 (expression -> expression PRINT expression .) ]
  ! PRINT           [ reduce using rule 77 (expression -> expression PRINT expression .) ]
  ! MENOR           [ reduce using rule 77 (expression -> expression PRINT expression .) ]
  ! MAYOR           [ reduce using rule 77 (expression -> expression PRINT expression .) ]


state 118

    (79) expression -> expression MENOR expression .
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DISTINTO resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
    COMA            reduce using rule 79 (expression -> expression MENOR expression .)
    PARENTESIS_DER  reduce using rule 79 (expression -> expression MENOR expression .)
    LLAVE_DER       reduce using rule 79 (expression -> expression MENOR expression .)
    PUNTO_Y_COMA    reduce using rule 79 (expression -> expression MENOR expression .)
    CORCHETE_DER    reduce using rule 79 (expression -> expression MENOR expression .)
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88

  ! SUMA            [ reduce using rule 79 (expression -> expression MENOR expression .) ]
  ! RESTA           [ reduce using rule 79 (expression -> expression MENOR expression .) ]
  ! MULTIPLICACION  [ reduce using rule 79 (expression -> expression MENOR expression .) ]
  ! DIVISION        [ reduce using rule 79 (expression -> expression MENOR expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 79 (expression -> expression MENOR expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 79 (expression -> expression MENOR expression .) ]
  ! IGUAL           [ reduce using rule 79 (expression -> expression MENOR expression .) ]
  ! DISTINTO        [ reduce using rule 79 (expression -> expression MENOR expression .) ]
  ! AND             [ reduce using rule 79 (expression -> expression MENOR expression .) ]
  ! OR              [ reduce using rule 79 (expression -> expression MENOR expression .) ]
  ! PRINT           [ reduce using rule 79 (expression -> expression MENOR expression .) ]
  ! MENOR           [ reduce using rule 79 (expression -> expression MENOR expression .) ]
  ! MAYOR           [ reduce using rule 79 (expression -> expression MENOR expression .) ]


state 119

    (80) expression -> expression MAYOR expression .
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DISTINTO resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
    COMA            reduce using rule 80 (expression -> expression MAYOR expression .)
    PARENTESIS_DER  reduce using rule 80 (expression -> expression MAYOR expression .)
    LLAVE_DER       reduce using rule 80 (expression -> expression MAYOR expression .)
    PUNTO_Y_COMA    reduce using rule 80 (expression -> expression MAYOR expression .)
    CORCHETE_DER    reduce using rule 80 (expression -> expression MAYOR expression .)
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88

  ! SUMA            [ reduce using rule 80 (expression -> expression MAYOR expression .) ]
  ! RESTA           [ reduce using rule 80 (expression -> expression MAYOR expression .) ]
  ! MULTIPLICACION  [ reduce using rule 80 (expression -> expression MAYOR expression .) ]
  ! DIVISION        [ reduce using rule 80 (expression -> expression MAYOR expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 80 (expression -> expression MAYOR expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 80 (expression -> expression MAYOR expression .) ]
  ! IGUAL           [ reduce using rule 80 (expression -> expression MAYOR expression .) ]
  ! DISTINTO        [ reduce using rule 80 (expression -> expression MAYOR expression .) ]
  ! AND             [ reduce using rule 80 (expression -> expression MAYOR expression .) ]
  ! OR              [ reduce using rule 80 (expression -> expression MAYOR expression .) ]
  ! PRINT           [ reduce using rule 80 (expression -> expression MAYOR expression .) ]
  ! MENOR           [ reduce using rule 80 (expression -> expression MAYOR expression .) ]
  ! MAYOR           [ reduce using rule 80 (expression -> expression MAYOR expression .) ]


state 120

    (78) expression -> COUT PRINT expression .
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DISTINTO resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
    COMA            reduce using rule 78 (expression -> COUT PRINT expression .)
    PARENTESIS_DER  reduce using rule 78 (expression -> COUT PRINT expression .)
    LLAVE_DER       reduce using rule 78 (expression -> COUT PRINT expression .)
    PUNTO_Y_COMA    reduce using rule 78 (expression -> COUT PRINT expression .)
    CORCHETE_DER    reduce using rule 78 (expression -> COUT PRINT expression .)
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88

  ! SUMA            [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! RESTA           [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! MULTIPLICACION  [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! DIVISION        [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! IGUAL           [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! DISTINTO        [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! AND             [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! OR              [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! PRINT           [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! MENOR           [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! MAYOR           [ reduce using rule 78 (expression -> COUT PRINT expression .) ]


state 121

    (19) main_function -> INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list . LLAVE_DER
    (24) statement_list -> statement_list . statement
    (25) statement -> . assignment_statement
    (26) statement -> . expression_statement
    (27) statement -> . if
    (28) statement -> . while
    (29) statement -> . do_while
    (30) statement -> . for
    (31) statement -> . return
    (32) statement -> . function_call PUNTO_Y_COMA
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (60) expression_statement -> . expression PUNTO_Y_COMA
    (61) expression_statement -> . COUT PRINT expression PUNTO_Y_COMA
    (33) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (35) while -> . WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (36) do_while -> . DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA
    (37) for -> . FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (38) return -> . RETURN expression PUNTO_Y_COMA
    (39) function_call -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    LLAVE_DER       shift and go to state 147
    ID              shift and go to state 132
    COUT            shift and go to state 134
    IF              shift and go to state 135
    WHILE           shift and go to state 136
    DO              shift and go to state 137
    FOR             shift and go to state 138
    RETURN          shift and go to state 139
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55

    statement                      shift and go to state 148
    assignment_statement           shift and go to state 123
    expression_statement           shift and go to state 124
    if                             shift and go to state 125
    while                          shift and go to state 126
    do_while                       shift and go to state 127
    for                            shift and go to state 128
    return                         shift and go to state 129
    function_call                  shift and go to state 130
    variable                       shift and go to state 131
    expression                     shift and go to state 133

state 122

    (23) statement_list -> statement .

    LLAVE_DER       reduce using rule 23 (statement_list -> statement .)
    ID              reduce using rule 23 (statement_list -> statement .)
    COUT            reduce using rule 23 (statement_list -> statement .)
    IF              reduce using rule 23 (statement_list -> statement .)
    WHILE           reduce using rule 23 (statement_list -> statement .)
    DO              reduce using rule 23 (statement_list -> statement .)
    FOR             reduce using rule 23 (statement_list -> statement .)
    RETURN          reduce using rule 23 (statement_list -> statement .)
    INT             reduce using rule 23 (statement_list -> statement .)
    FLOAT           reduce using rule 23 (statement_list -> statement .)
    CHAR            reduce using rule 23 (statement_list -> statement .)
    DOUBLE          reduce using rule 23 (statement_list -> statement .)
    BOOLEAN         reduce using rule 23 (statement_list -> statement .)
    LONG            reduce using rule 23 (statement_list -> statement .)
    STRING          reduce using rule 23 (statement_list -> statement .)
    VOID            reduce using rule 23 (statement_list -> statement .)
    NOT             reduce using rule 23 (statement_list -> statement .)
    PARENTESIS_IZQ  reduce using rule 23 (statement_list -> statement .)
    LLAVE_IZQ       reduce using rule 23 (statement_list -> statement .)
    NUMERO          reduce using rule 23 (statement_list -> statement .)
    CADENA          reduce using rule 23 (statement_list -> statement .)


state 123

    (25) statement -> assignment_statement .

    LLAVE_DER       reduce using rule 25 (statement -> assignment_statement .)
    ID              reduce using rule 25 (statement -> assignment_statement .)
    COUT            reduce using rule 25 (statement -> assignment_statement .)
    IF              reduce using rule 25 (statement -> assignment_statement .)
    WHILE           reduce using rule 25 (statement -> assignment_statement .)
    DO              reduce using rule 25 (statement -> assignment_statement .)
    FOR             reduce using rule 25 (statement -> assignment_statement .)
    RETURN          reduce using rule 25 (statement -> assignment_statement .)
    INT             reduce using rule 25 (statement -> assignment_statement .)
    FLOAT           reduce using rule 25 (statement -> assignment_statement .)
    CHAR            reduce using rule 25 (statement -> assignment_statement .)
    DOUBLE          reduce using rule 25 (statement -> assignment_statement .)
    BOOLEAN         reduce using rule 25 (statement -> assignment_statement .)
    LONG            reduce using rule 25 (statement -> assignment_statement .)
    STRING          reduce using rule 25 (statement -> assignment_statement .)
    VOID            reduce using rule 25 (statement -> assignment_statement .)
    NOT             reduce using rule 25 (statement -> assignment_statement .)
    PARENTESIS_IZQ  reduce using rule 25 (statement -> assignment_statement .)
    LLAVE_IZQ       reduce using rule 25 (statement -> assignment_statement .)
    NUMERO          reduce using rule 25 (statement -> assignment_statement .)
    CADENA          reduce using rule 25 (statement -> assignment_statement .)


state 124

    (26) statement -> expression_statement .

    LLAVE_DER       reduce using rule 26 (statement -> expression_statement .)
    ID              reduce using rule 26 (statement -> expression_statement .)
    COUT            reduce using rule 26 (statement -> expression_statement .)
    IF              reduce using rule 26 (statement -> expression_statement .)
    WHILE           reduce using rule 26 (statement -> expression_statement .)
    DO              reduce using rule 26 (statement -> expression_statement .)
    FOR             reduce using rule 26 (statement -> expression_statement .)
    RETURN          reduce using rule 26 (statement -> expression_statement .)
    INT             reduce using rule 26 (statement -> expression_statement .)
    FLOAT           reduce using rule 26 (statement -> expression_statement .)
    CHAR            reduce using rule 26 (statement -> expression_statement .)
    DOUBLE          reduce using rule 26 (statement -> expression_statement .)
    BOOLEAN         reduce using rule 26 (statement -> expression_statement .)
    LONG            reduce using rule 26 (statement -> expression_statement .)
    STRING          reduce using rule 26 (statement -> expression_statement .)
    VOID            reduce using rule 26 (statement -> expression_statement .)
    NOT             reduce using rule 26 (statement -> expression_statement .)
    PARENTESIS_IZQ  reduce using rule 26 (statement -> expression_statement .)
    LLAVE_IZQ       reduce using rule 26 (statement -> expression_statement .)
    NUMERO          reduce using rule 26 (statement -> expression_statement .)
    CADENA          reduce using rule 26 (statement -> expression_statement .)


state 125

    (27) statement -> if .

    LLAVE_DER       reduce using rule 27 (statement -> if .)
    ID              reduce using rule 27 (statement -> if .)
    COUT            reduce using rule 27 (statement -> if .)
    IF              reduce using rule 27 (statement -> if .)
    WHILE           reduce using rule 27 (statement -> if .)
    DO              reduce using rule 27 (statement -> if .)
    FOR             reduce using rule 27 (statement -> if .)
    RETURN          reduce using rule 27 (statement -> if .)
    INT             reduce using rule 27 (statement -> if .)
    FLOAT           reduce using rule 27 (statement -> if .)
    CHAR            reduce using rule 27 (statement -> if .)
    DOUBLE          reduce using rule 27 (statement -> if .)
    BOOLEAN         reduce using rule 27 (statement -> if .)
    LONG            reduce using rule 27 (statement -> if .)
    STRING          reduce using rule 27 (statement -> if .)
    VOID            reduce using rule 27 (statement -> if .)
    NOT             reduce using rule 27 (statement -> if .)
    PARENTESIS_IZQ  reduce using rule 27 (statement -> if .)
    LLAVE_IZQ       reduce using rule 27 (statement -> if .)
    NUMERO          reduce using rule 27 (statement -> if .)
    CADENA          reduce using rule 27 (statement -> if .)


state 126

    (28) statement -> while .

    LLAVE_DER       reduce using rule 28 (statement -> while .)
    ID              reduce using rule 28 (statement -> while .)
    COUT            reduce using rule 28 (statement -> while .)
    IF              reduce using rule 28 (statement -> while .)
    WHILE           reduce using rule 28 (statement -> while .)
    DO              reduce using rule 28 (statement -> while .)
    FOR             reduce using rule 28 (statement -> while .)
    RETURN          reduce using rule 28 (statement -> while .)
    INT             reduce using rule 28 (statement -> while .)
    FLOAT           reduce using rule 28 (statement -> while .)
    CHAR            reduce using rule 28 (statement -> while .)
    DOUBLE          reduce using rule 28 (statement -> while .)
    BOOLEAN         reduce using rule 28 (statement -> while .)
    LONG            reduce using rule 28 (statement -> while .)
    STRING          reduce using rule 28 (statement -> while .)
    VOID            reduce using rule 28 (statement -> while .)
    NOT             reduce using rule 28 (statement -> while .)
    PARENTESIS_IZQ  reduce using rule 28 (statement -> while .)
    LLAVE_IZQ       reduce using rule 28 (statement -> while .)
    NUMERO          reduce using rule 28 (statement -> while .)
    CADENA          reduce using rule 28 (statement -> while .)


state 127

    (29) statement -> do_while .

    LLAVE_DER       reduce using rule 29 (statement -> do_while .)
    ID              reduce using rule 29 (statement -> do_while .)
    COUT            reduce using rule 29 (statement -> do_while .)
    IF              reduce using rule 29 (statement -> do_while .)
    WHILE           reduce using rule 29 (statement -> do_while .)
    DO              reduce using rule 29 (statement -> do_while .)
    FOR             reduce using rule 29 (statement -> do_while .)
    RETURN          reduce using rule 29 (statement -> do_while .)
    INT             reduce using rule 29 (statement -> do_while .)
    FLOAT           reduce using rule 29 (statement -> do_while .)
    CHAR            reduce using rule 29 (statement -> do_while .)
    DOUBLE          reduce using rule 29 (statement -> do_while .)
    BOOLEAN         reduce using rule 29 (statement -> do_while .)
    LONG            reduce using rule 29 (statement -> do_while .)
    STRING          reduce using rule 29 (statement -> do_while .)
    VOID            reduce using rule 29 (statement -> do_while .)
    NOT             reduce using rule 29 (statement -> do_while .)
    PARENTESIS_IZQ  reduce using rule 29 (statement -> do_while .)
    LLAVE_IZQ       reduce using rule 29 (statement -> do_while .)
    NUMERO          reduce using rule 29 (statement -> do_while .)
    CADENA          reduce using rule 29 (statement -> do_while .)


state 128

    (30) statement -> for .

    LLAVE_DER       reduce using rule 30 (statement -> for .)
    ID              reduce using rule 30 (statement -> for .)
    COUT            reduce using rule 30 (statement -> for .)
    IF              reduce using rule 30 (statement -> for .)
    WHILE           reduce using rule 30 (statement -> for .)
    DO              reduce using rule 30 (statement -> for .)
    FOR             reduce using rule 30 (statement -> for .)
    RETURN          reduce using rule 30 (statement -> for .)
    INT             reduce using rule 30 (statement -> for .)
    FLOAT           reduce using rule 30 (statement -> for .)
    CHAR            reduce using rule 30 (statement -> for .)
    DOUBLE          reduce using rule 30 (statement -> for .)
    BOOLEAN         reduce using rule 30 (statement -> for .)
    LONG            reduce using rule 30 (statement -> for .)
    STRING          reduce using rule 30 (statement -> for .)
    VOID            reduce using rule 30 (statement -> for .)
    NOT             reduce using rule 30 (statement -> for .)
    PARENTESIS_IZQ  reduce using rule 30 (statement -> for .)
    LLAVE_IZQ       reduce using rule 30 (statement -> for .)
    NUMERO          reduce using rule 30 (statement -> for .)
    CADENA          reduce using rule 30 (statement -> for .)


state 129

    (31) statement -> return .

    LLAVE_DER       reduce using rule 31 (statement -> return .)
    ID              reduce using rule 31 (statement -> return .)
    COUT            reduce using rule 31 (statement -> return .)
    IF              reduce using rule 31 (statement -> return .)
    WHILE           reduce using rule 31 (statement -> return .)
    DO              reduce using rule 31 (statement -> return .)
    FOR             reduce using rule 31 (statement -> return .)
    RETURN          reduce using rule 31 (statement -> return .)
    INT             reduce using rule 31 (statement -> return .)
    FLOAT           reduce using rule 31 (statement -> return .)
    CHAR            reduce using rule 31 (statement -> return .)
    DOUBLE          reduce using rule 31 (statement -> return .)
    BOOLEAN         reduce using rule 31 (statement -> return .)
    LONG            reduce using rule 31 (statement -> return .)
    STRING          reduce using rule 31 (statement -> return .)
    VOID            reduce using rule 31 (statement -> return .)
    NOT             reduce using rule 31 (statement -> return .)
    PARENTESIS_IZQ  reduce using rule 31 (statement -> return .)
    LLAVE_IZQ       reduce using rule 31 (statement -> return .)
    NUMERO          reduce using rule 31 (statement -> return .)
    CADENA          reduce using rule 31 (statement -> return .)


state 130

    (32) statement -> function_call . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 149


state 131

    (48) assignment_statement -> variable . ID PUNTO_Y_COMA
    (49) assignment_statement -> variable . ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> variable . ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA

    ID              shift and go to state 150


state 132

    (51) assignment_statement -> ID . ASIGNACION expression PUNTO_Y_COMA
    (39) function_call -> ID . PARENTESIS_IZQ argument_list PARENTESIS_DER
    (82) expression -> ID .

    ASIGNACION      shift and go to state 60
    PARENTESIS_IZQ  shift and go to state 151
    PUNTO_Y_COMA    reduce using rule 82 (expression -> ID .)
    SUMA            reduce using rule 82 (expression -> ID .)
    RESTA           reduce using rule 82 (expression -> ID .)
    MULTIPLICACION  reduce using rule 82 (expression -> ID .)
    DIVISION        reduce using rule 82 (expression -> ID .)
    MENOR_IGUAL     reduce using rule 82 (expression -> ID .)
    MAYOR_IGUAL     reduce using rule 82 (expression -> ID .)
    IGUAL           reduce using rule 82 (expression -> ID .)
    DISTINTO        reduce using rule 82 (expression -> ID .)
    AND             reduce using rule 82 (expression -> ID .)
    OR              reduce using rule 82 (expression -> ID .)
    PRINT           reduce using rule 82 (expression -> ID .)
    MENOR           reduce using rule 82 (expression -> ID .)
    MAYOR           reduce using rule 82 (expression -> ID .)


state 133

    (60) expression_statement -> expression . PUNTO_Y_COMA
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

    PUNTO_Y_COMA    shift and go to state 152
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88


state 134

    (61) expression_statement -> COUT . PRINT expression PUNTO_Y_COMA
    (78) expression -> COUT . PRINT expression

    PRINT           shift and go to state 153


state 135

    (33) if -> IF . PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> IF . PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER

    PARENTESIS_IZQ  shift and go to state 154


state 136

    (35) while -> WHILE . PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER

    PARENTESIS_IZQ  shift and go to state 155


state 137

    (36) do_while -> DO . LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA

    LLAVE_IZQ       shift and go to state 156


state 138

    (37) for -> FOR . PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER

    PARENTESIS_IZQ  shift and go to state 157


state 139

    (38) return -> RETURN . expression PUNTO_Y_COMA
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 158

state 140

    (51) assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .

    PUBLIC          reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    PRIVATE         reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    PROTECTED       reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    ID              reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    NUMERAL         reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    USING           reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    DEST            reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    INT             reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    FLOAT           reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    CHAR            reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    LONG            reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    STRING          reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    VOID            reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    LLAVE_DER       reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    COUT            reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    IF              reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    WHILE           reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    DO              reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    FOR             reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    RETURN          reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    NOT             reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    PARENTESIS_IZQ  reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    LLAVE_IZQ       reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    NUMERO          reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)
    CADENA          reduce using rule 51 (assignment_statement -> ID ASIGNACION expression PUNTO_Y_COMA .)


state 141

    (17) constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER . LLAVE_IZQ statement_list LLAVE_DER

    LLAVE_IZQ       shift and go to state 159


state 142

    (49) assignment_statement -> variable ID ASIGNACION expression . PUNTO_Y_COMA
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

    PUNTO_Y_COMA    shift and go to state 160
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88


state 143

    (50) assignment_statement -> variable ID CORCHETE_IZQ expression . CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

    CORCHETE_DER    shift and go to state 161
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88


state 144

    (18) destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list . PARENTESIS_DER PUNTO_Y_COMA

    PARENTESIS_DER  shift and go to state 162


state 145

    (46) argument_list -> variable expression COMA argument_list .

    PARENTESIS_DER  reduce using rule 46 (argument_list -> variable expression COMA argument_list .)
    LLAVE_DER       reduce using rule 46 (argument_list -> variable expression COMA argument_list .)


state 146

    (20) function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list . LLAVE_DER
    (24) statement_list -> statement_list . statement
    (25) statement -> . assignment_statement
    (26) statement -> . expression_statement
    (27) statement -> . if
    (28) statement -> . while
    (29) statement -> . do_while
    (30) statement -> . for
    (31) statement -> . return
    (32) statement -> . function_call PUNTO_Y_COMA
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (60) expression_statement -> . expression PUNTO_Y_COMA
    (61) expression_statement -> . COUT PRINT expression PUNTO_Y_COMA
    (33) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (35) while -> . WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (36) do_while -> . DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA
    (37) for -> . FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (38) return -> . RETURN expression PUNTO_Y_COMA
    (39) function_call -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    LLAVE_DER       shift and go to state 163
    ID              shift and go to state 132
    COUT            shift and go to state 134
    IF              shift and go to state 135
    WHILE           shift and go to state 136
    DO              shift and go to state 137
    FOR             shift and go to state 138
    RETURN          shift and go to state 139
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55

    variable                       shift and go to state 131
    statement                      shift and go to state 148
    assignment_statement           shift and go to state 123
    expression_statement           shift and go to state 124
    if                             shift and go to state 125
    while                          shift and go to state 126
    do_while                       shift and go to state 127
    for                            shift and go to state 128
    return                         shift and go to state 129
    function_call                  shift and go to state 130
    expression                     shift and go to state 133

state 147

    (19) main_function -> INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .

    CLASS           reduce using rule 19 (main_function -> INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    NUMERAL         reduce using rule 19 (main_function -> INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    USING           reduce using rule 19 (main_function -> INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    INT             reduce using rule 19 (main_function -> INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    FLOAT           reduce using rule 19 (main_function -> INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    CHAR            reduce using rule 19 (main_function -> INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    DOUBLE          reduce using rule 19 (main_function -> INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    BOOLEAN         reduce using rule 19 (main_function -> INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    LONG            reduce using rule 19 (main_function -> INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    STRING          reduce using rule 19 (main_function -> INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    VOID            reduce using rule 19 (main_function -> INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    $end            reduce using rule 19 (main_function -> INT MAIN PARENTESIS_IZQ PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)


state 148

    (24) statement_list -> statement_list statement .

    LLAVE_DER       reduce using rule 24 (statement_list -> statement_list statement .)
    ID              reduce using rule 24 (statement_list -> statement_list statement .)
    COUT            reduce using rule 24 (statement_list -> statement_list statement .)
    IF              reduce using rule 24 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 24 (statement_list -> statement_list statement .)
    DO              reduce using rule 24 (statement_list -> statement_list statement .)
    FOR             reduce using rule 24 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 24 (statement_list -> statement_list statement .)
    INT             reduce using rule 24 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 24 (statement_list -> statement_list statement .)
    CHAR            reduce using rule 24 (statement_list -> statement_list statement .)
    DOUBLE          reduce using rule 24 (statement_list -> statement_list statement .)
    BOOLEAN         reduce using rule 24 (statement_list -> statement_list statement .)
    LONG            reduce using rule 24 (statement_list -> statement_list statement .)
    STRING          reduce using rule 24 (statement_list -> statement_list statement .)
    VOID            reduce using rule 24 (statement_list -> statement_list statement .)
    NOT             reduce using rule 24 (statement_list -> statement_list statement .)
    PARENTESIS_IZQ  reduce using rule 24 (statement_list -> statement_list statement .)
    LLAVE_IZQ       reduce using rule 24 (statement_list -> statement_list statement .)
    NUMERO          reduce using rule 24 (statement_list -> statement_list statement .)
    CADENA          reduce using rule 24 (statement_list -> statement_list statement .)


state 149

    (32) statement -> function_call PUNTO_Y_COMA .

    LLAVE_DER       reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    ID              reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    COUT            reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    IF              reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    WHILE           reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    DO              reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    FOR             reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    RETURN          reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    INT             reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    FLOAT           reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    CHAR            reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    LONG            reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    STRING          reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    VOID            reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    NOT             reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    PARENTESIS_IZQ  reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    LLAVE_IZQ       reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    NUMERO          reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)
    CADENA          reduce using rule 32 (statement -> function_call PUNTO_Y_COMA .)


state 150

    (48) assignment_statement -> variable ID . PUNTO_Y_COMA
    (49) assignment_statement -> variable ID . ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> variable ID . CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 97
    ASIGNACION      shift and go to state 98
    CORCHETE_IZQ    shift and go to state 99


state 151

    (39) function_call -> ID PARENTESIS_IZQ . argument_list PARENTESIS_DER
    (43) argument_list -> . expression
    (44) argument_list -> . expression COMA argument_list
    (45) argument_list -> . variable expression
    (46) argument_list -> . variable expression COMA argument_list
    (47) argument_list -> . vacio
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (83) vacio -> .

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    PARENTESIS_DER  reduce using rule 83 (vacio -> .)

    argument_list                  shift and go to state 164
    expression                     shift and go to state 51
    variable                       shift and go to state 46
    vacio                          shift and go to state 52

state 152

    (60) expression_statement -> expression PUNTO_Y_COMA .

    LLAVE_DER       reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    ID              reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    COUT            reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    IF              reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    WHILE           reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    DO              reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    FOR             reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    RETURN          reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    INT             reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    FLOAT           reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    CHAR            reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    LONG            reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    STRING          reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    VOID            reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    NOT             reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    PARENTESIS_IZQ  reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    LLAVE_IZQ       reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    NUMERO          reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)
    CADENA          reduce using rule 60 (expression_statement -> expression PUNTO_Y_COMA .)


state 153

    (61) expression_statement -> COUT PRINT . expression PUNTO_Y_COMA
    (78) expression -> COUT PRINT . expression
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 165

state 154

    (33) if -> IF PARENTESIS_IZQ . expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> IF PARENTESIS_IZQ . expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 166

state 155

    (35) while -> WHILE PARENTESIS_IZQ . expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 167

state 156

    (36) do_while -> DO LLAVE_IZQ . statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA
    (23) statement_list -> . statement
    (24) statement_list -> . statement_list statement
    (25) statement -> . assignment_statement
    (26) statement -> . expression_statement
    (27) statement -> . if
    (28) statement -> . while
    (29) statement -> . do_while
    (30) statement -> . for
    (31) statement -> . return
    (32) statement -> . function_call PUNTO_Y_COMA
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (60) expression_statement -> . expression PUNTO_Y_COMA
    (61) expression_statement -> . COUT PRINT expression PUNTO_Y_COMA
    (33) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (35) while -> . WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (36) do_while -> . DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA
    (37) for -> . FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (38) return -> . RETURN expression PUNTO_Y_COMA
    (39) function_call -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    ID              shift and go to state 132
    COUT            shift and go to state 134
    IF              shift and go to state 135
    WHILE           shift and go to state 136
    DO              shift and go to state 137
    FOR             shift and go to state 138
    RETURN          shift and go to state 139
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55

    statement_list                 shift and go to state 168
    expression                     shift and go to state 133
    statement                      shift and go to state 122
    assignment_statement           shift and go to state 123
    expression_statement           shift and go to state 124
    if                             shift and go to state 125
    while                          shift and go to state 126
    do_while                       shift and go to state 127
    for                            shift and go to state 128
    return                         shift and go to state 129
    function_call                  shift and go to state 130
    variable                       shift and go to state 131

state 157

    (37) for -> FOR PARENTESIS_IZQ . variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID

    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17

    variable                       shift and go to state 169

state 158

    (38) return -> RETURN expression . PUNTO_Y_COMA
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

    PUNTO_Y_COMA    shift and go to state 170
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88


state 159

    (17) constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ . statement_list LLAVE_DER
    (23) statement_list -> . statement
    (24) statement_list -> . statement_list statement
    (25) statement -> . assignment_statement
    (26) statement -> . expression_statement
    (27) statement -> . if
    (28) statement -> . while
    (29) statement -> . do_while
    (30) statement -> . for
    (31) statement -> . return
    (32) statement -> . function_call PUNTO_Y_COMA
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (60) expression_statement -> . expression PUNTO_Y_COMA
    (61) expression_statement -> . COUT PRINT expression PUNTO_Y_COMA
    (33) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (35) while -> . WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (36) do_while -> . DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA
    (37) for -> . FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (38) return -> . RETURN expression PUNTO_Y_COMA
    (39) function_call -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    ID              shift and go to state 132
    COUT            shift and go to state 134
    IF              shift and go to state 135
    WHILE           shift and go to state 136
    DO              shift and go to state 137
    FOR             shift and go to state 138
    RETURN          shift and go to state 139
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55

    statement_list                 shift and go to state 171
    statement                      shift and go to state 122
    assignment_statement           shift and go to state 123
    expression_statement           shift and go to state 124
    if                             shift and go to state 125
    while                          shift and go to state 126
    do_while                       shift and go to state 127
    for                            shift and go to state 128
    return                         shift and go to state 129
    function_call                  shift and go to state 130
    variable                       shift and go to state 131
    expression                     shift and go to state 133

state 160

    (49) assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .

    PUBLIC          reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    PRIVATE         reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    PROTECTED       reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    ID              reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    NUMERAL         reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    USING           reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    DEST            reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    INT             reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    FLOAT           reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    CHAR            reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    LONG            reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    STRING          reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    VOID            reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    LLAVE_DER       reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    COUT            reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    IF              reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    WHILE           reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    DO              reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    FOR             reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    RETURN          reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    NOT             reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    PARENTESIS_IZQ  reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    LLAVE_IZQ       reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    NUMERO          reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)
    CADENA          reduce using rule 49 (assignment_statement -> variable ID ASIGNACION expression PUNTO_Y_COMA .)


state 161

    (50) assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER . ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA

    ASIGNACION      shift and go to state 172


state 162

    (18) destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 173


state 163

    (20) function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .

    CLASS           reduce using rule 20 (function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    NUMERAL         reduce using rule 20 (function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    USING           reduce using rule 20 (function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    INT             reduce using rule 20 (function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    FLOAT           reduce using rule 20 (function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    CHAR            reduce using rule 20 (function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    DOUBLE          reduce using rule 20 (function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    BOOLEAN         reduce using rule 20 (function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    LONG            reduce using rule 20 (function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    STRING          reduce using rule 20 (function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    VOID            reduce using rule 20 (function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    $end            reduce using rule 20 (function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    PUBLIC          reduce using rule 20 (function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    PRIVATE         reduce using rule 20 (function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    PROTECTED       reduce using rule 20 (function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    ID              reduce using rule 20 (function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    DEST            reduce using rule 20 (function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    LLAVE_DER       reduce using rule 20 (function_declaration -> variable ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)


state 164

    (39) function_call -> ID PARENTESIS_IZQ argument_list . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 174


state 165

    (61) expression_statement -> COUT PRINT expression . PUNTO_Y_COMA
    (78) expression -> COUT PRINT expression .
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

  ! shift/reduce conflict for PUNTO_Y_COMA resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL resolved as shift
  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for DISTINTO resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
    PUNTO_Y_COMA    shift and go to state 175
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88

  ! PUNTO_Y_COMA    [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! SUMA            [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! RESTA           [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! MULTIPLICACION  [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! DIVISION        [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! MENOR_IGUAL     [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! MAYOR_IGUAL     [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! IGUAL           [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! DISTINTO        [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! AND             [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! OR              [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! PRINT           [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! MENOR           [ reduce using rule 78 (expression -> COUT PRINT expression .) ]
  ! MAYOR           [ reduce using rule 78 (expression -> COUT PRINT expression .) ]


state 166

    (33) if -> IF PARENTESIS_IZQ expression . PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> IF PARENTESIS_IZQ expression . PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

    PARENTESIS_DER  shift and go to state 176
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88


state 167

    (35) while -> WHILE PARENTESIS_IZQ expression . PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

    PARENTESIS_DER  shift and go to state 177
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88


state 168

    (36) do_while -> DO LLAVE_IZQ statement_list . LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA
    (24) statement_list -> statement_list . statement
    (25) statement -> . assignment_statement
    (26) statement -> . expression_statement
    (27) statement -> . if
    (28) statement -> . while
    (29) statement -> . do_while
    (30) statement -> . for
    (31) statement -> . return
    (32) statement -> . function_call PUNTO_Y_COMA
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (60) expression_statement -> . expression PUNTO_Y_COMA
    (61) expression_statement -> . COUT PRINT expression PUNTO_Y_COMA
    (33) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (35) while -> . WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (36) do_while -> . DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA
    (37) for -> . FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (38) return -> . RETURN expression PUNTO_Y_COMA
    (39) function_call -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    LLAVE_DER       shift and go to state 178
    ID              shift and go to state 132
    COUT            shift and go to state 134
    IF              shift and go to state 135
    WHILE           shift and go to state 136
    DO              shift and go to state 137
    FOR             shift and go to state 138
    RETURN          shift and go to state 139
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55

    expression                     shift and go to state 133
    statement                      shift and go to state 148
    assignment_statement           shift and go to state 123
    expression_statement           shift and go to state 124
    if                             shift and go to state 125
    while                          shift and go to state 126
    do_while                       shift and go to state 127
    for                            shift and go to state 128
    return                         shift and go to state 129
    function_call                  shift and go to state 130
    variable                       shift and go to state 131

state 169

    (37) for -> FOR PARENTESIS_IZQ variable . ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER

    ID              shift and go to state 179


state 170

    (38) return -> RETURN expression PUNTO_Y_COMA .

    LLAVE_DER       reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    ID              reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    COUT            reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    IF              reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    WHILE           reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    DO              reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    FOR             reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    RETURN          reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    INT             reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    FLOAT           reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    CHAR            reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    LONG            reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    STRING          reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    VOID            reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    NOT             reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    PARENTESIS_IZQ  reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    LLAVE_IZQ       reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    NUMERO          reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)
    CADENA          reduce using rule 38 (return -> RETURN expression PUNTO_Y_COMA .)


state 171

    (17) constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list . LLAVE_DER
    (24) statement_list -> statement_list . statement
    (25) statement -> . assignment_statement
    (26) statement -> . expression_statement
    (27) statement -> . if
    (28) statement -> . while
    (29) statement -> . do_while
    (30) statement -> . for
    (31) statement -> . return
    (32) statement -> . function_call PUNTO_Y_COMA
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (60) expression_statement -> . expression PUNTO_Y_COMA
    (61) expression_statement -> . COUT PRINT expression PUNTO_Y_COMA
    (33) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (35) while -> . WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (36) do_while -> . DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA
    (37) for -> . FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (38) return -> . RETURN expression PUNTO_Y_COMA
    (39) function_call -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    LLAVE_DER       shift and go to state 180
    ID              shift and go to state 132
    COUT            shift and go to state 134
    IF              shift and go to state 135
    WHILE           shift and go to state 136
    DO              shift and go to state 137
    FOR             shift and go to state 138
    RETURN          shift and go to state 139
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55

    statement                      shift and go to state 148
    assignment_statement           shift and go to state 123
    expression_statement           shift and go to state 124
    if                             shift and go to state 125
    while                          shift and go to state 126
    do_while                       shift and go to state 127
    for                            shift and go to state 128
    return                         shift and go to state 129
    function_call                  shift and go to state 130
    variable                       shift and go to state 131
    expression                     shift and go to state 133

state 172

    (50) assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION . LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA

    LLAVE_IZQ       shift and go to state 181


state 173

    (18) destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA .

    PUBLIC          reduce using rule 18 (destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA .)
    PRIVATE         reduce using rule 18 (destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA .)
    PROTECTED       reduce using rule 18 (destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA .)
    ID              reduce using rule 18 (destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA .)
    NUMERAL         reduce using rule 18 (destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA .)
    USING           reduce using rule 18 (destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA .)
    DEST            reduce using rule 18 (destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA .)
    INT             reduce using rule 18 (destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA .)
    FLOAT           reduce using rule 18 (destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA .)
    CHAR            reduce using rule 18 (destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 18 (destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 18 (destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA .)
    LONG            reduce using rule 18 (destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA .)
    STRING          reduce using rule 18 (destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA .)
    VOID            reduce using rule 18 (destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA .)
    LLAVE_DER       reduce using rule 18 (destructor_declaration -> DEST ID PARENTESIS_IZQ argument_list PARENTESIS_DER PUNTO_Y_COMA .)


state 174

    (39) function_call -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER .

    PUNTO_Y_COMA    reduce using rule 39 (function_call -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER .)


state 175

    (61) expression_statement -> COUT PRINT expression PUNTO_Y_COMA .

    LLAVE_DER       reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    ID              reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    COUT            reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    IF              reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    WHILE           reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    DO              reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    FOR             reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    RETURN          reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    INT             reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    FLOAT           reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    CHAR            reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    LONG            reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    STRING          reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    VOID            reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    NOT             reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    PARENTESIS_IZQ  reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    LLAVE_IZQ       reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    NUMERO          reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)
    CADENA          reduce using rule 61 (expression_statement -> COUT PRINT expression PUNTO_Y_COMA .)


state 176

    (33) if -> IF PARENTESIS_IZQ expression PARENTESIS_DER . LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> IF PARENTESIS_IZQ expression PARENTESIS_DER . LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER

    LLAVE_IZQ       shift and go to state 182


state 177

    (35) while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER . LLAVE_IZQ statement_list LLAVE_DER

    LLAVE_IZQ       shift and go to state 183


state 178

    (36) do_while -> DO LLAVE_IZQ statement_list LLAVE_DER . WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA

    WHILE           shift and go to state 184


state 179

    (37) for -> FOR PARENTESIS_IZQ variable ID . ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER

    ASIGNACION      shift and go to state 185


state 180

    (17) constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .

    PUBLIC          reduce using rule 17 (constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    PRIVATE         reduce using rule 17 (constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    PROTECTED       reduce using rule 17 (constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    ID              reduce using rule 17 (constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    NUMERAL         reduce using rule 17 (constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    USING           reduce using rule 17 (constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    DEST            reduce using rule 17 (constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    INT             reduce using rule 17 (constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    FLOAT           reduce using rule 17 (constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    CHAR            reduce using rule 17 (constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    DOUBLE          reduce using rule 17 (constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    BOOLEAN         reduce using rule 17 (constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    LONG            reduce using rule 17 (constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    STRING          reduce using rule 17 (constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    VOID            reduce using rule 17 (constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    LLAVE_DER       reduce using rule 17 (constructor_declaration -> ID PARENTESIS_IZQ argument_list PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)


state 181

    (50) assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ . argument_list LLAVE_DER PUNTO_Y_COMA
    (43) argument_list -> . expression
    (44) argument_list -> . expression COMA argument_list
    (45) argument_list -> . variable expression
    (46) argument_list -> . variable expression COMA argument_list
    (47) argument_list -> . vacio
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (83) vacio -> .

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    LLAVE_DER       reduce using rule 83 (vacio -> .)

    variable                       shift and go to state 46
    expression                     shift and go to state 51
    argument_list                  shift and go to state 186
    vacio                          shift and go to state 52

state 182

    (33) if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ . statement_list LLAVE_DER
    (34) if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ . statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (23) statement_list -> . statement
    (24) statement_list -> . statement_list statement
    (25) statement -> . assignment_statement
    (26) statement -> . expression_statement
    (27) statement -> . if
    (28) statement -> . while
    (29) statement -> . do_while
    (30) statement -> . for
    (31) statement -> . return
    (32) statement -> . function_call PUNTO_Y_COMA
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (60) expression_statement -> . expression PUNTO_Y_COMA
    (61) expression_statement -> . COUT PRINT expression PUNTO_Y_COMA
    (33) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (35) while -> . WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (36) do_while -> . DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA
    (37) for -> . FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (38) return -> . RETURN expression PUNTO_Y_COMA
    (39) function_call -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    ID              shift and go to state 132
    COUT            shift and go to state 134
    IF              shift and go to state 135
    WHILE           shift and go to state 136
    DO              shift and go to state 137
    FOR             shift and go to state 138
    RETURN          shift and go to state 139
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55

    expression                     shift and go to state 133
    statement_list                 shift and go to state 187
    statement                      shift and go to state 122
    assignment_statement           shift and go to state 123
    expression_statement           shift and go to state 124
    if                             shift and go to state 125
    while                          shift and go to state 126
    do_while                       shift and go to state 127
    for                            shift and go to state 128
    return                         shift and go to state 129
    function_call                  shift and go to state 130
    variable                       shift and go to state 131

state 183

    (35) while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ . statement_list LLAVE_DER
    (23) statement_list -> . statement
    (24) statement_list -> . statement_list statement
    (25) statement -> . assignment_statement
    (26) statement -> . expression_statement
    (27) statement -> . if
    (28) statement -> . while
    (29) statement -> . do_while
    (30) statement -> . for
    (31) statement -> . return
    (32) statement -> . function_call PUNTO_Y_COMA
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (60) expression_statement -> . expression PUNTO_Y_COMA
    (61) expression_statement -> . COUT PRINT expression PUNTO_Y_COMA
    (33) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (35) while -> . WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (36) do_while -> . DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA
    (37) for -> . FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (38) return -> . RETURN expression PUNTO_Y_COMA
    (39) function_call -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    ID              shift and go to state 132
    COUT            shift and go to state 134
    IF              shift and go to state 135
    WHILE           shift and go to state 136
    DO              shift and go to state 137
    FOR             shift and go to state 138
    RETURN          shift and go to state 139
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55

    expression                     shift and go to state 133
    statement_list                 shift and go to state 188
    statement                      shift and go to state 122
    assignment_statement           shift and go to state 123
    expression_statement           shift and go to state 124
    if                             shift and go to state 125
    while                          shift and go to state 126
    do_while                       shift and go to state 127
    for                            shift and go to state 128
    return                         shift and go to state 129
    function_call                  shift and go to state 130
    variable                       shift and go to state 131

state 184

    (36) do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE . PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA

    PARENTESIS_IZQ  shift and go to state 189


state 185

    (37) for -> FOR PARENTESIS_IZQ variable ID ASIGNACION . expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 190

state 186

    (50) assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list . LLAVE_DER PUNTO_Y_COMA

    LLAVE_DER       shift and go to state 191


state 187

    (33) if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list . LLAVE_DER
    (34) if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list . LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (24) statement_list -> statement_list . statement
    (25) statement -> . assignment_statement
    (26) statement -> . expression_statement
    (27) statement -> . if
    (28) statement -> . while
    (29) statement -> . do_while
    (30) statement -> . for
    (31) statement -> . return
    (32) statement -> . function_call PUNTO_Y_COMA
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (60) expression_statement -> . expression PUNTO_Y_COMA
    (61) expression_statement -> . COUT PRINT expression PUNTO_Y_COMA
    (33) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (35) while -> . WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (36) do_while -> . DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA
    (37) for -> . FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (38) return -> . RETURN expression PUNTO_Y_COMA
    (39) function_call -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    LLAVE_DER       shift and go to state 192
    ID              shift and go to state 132
    COUT            shift and go to state 134
    IF              shift and go to state 135
    WHILE           shift and go to state 136
    DO              shift and go to state 137
    FOR             shift and go to state 138
    RETURN          shift and go to state 139
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55

    expression                     shift and go to state 133
    statement                      shift and go to state 148
    assignment_statement           shift and go to state 123
    expression_statement           shift and go to state 124
    if                             shift and go to state 125
    while                          shift and go to state 126
    do_while                       shift and go to state 127
    for                            shift and go to state 128
    return                         shift and go to state 129
    function_call                  shift and go to state 130
    variable                       shift and go to state 131

state 188

    (35) while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list . LLAVE_DER
    (24) statement_list -> statement_list . statement
    (25) statement -> . assignment_statement
    (26) statement -> . expression_statement
    (27) statement -> . if
    (28) statement -> . while
    (29) statement -> . do_while
    (30) statement -> . for
    (31) statement -> . return
    (32) statement -> . function_call PUNTO_Y_COMA
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (60) expression_statement -> . expression PUNTO_Y_COMA
    (61) expression_statement -> . COUT PRINT expression PUNTO_Y_COMA
    (33) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (35) while -> . WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (36) do_while -> . DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA
    (37) for -> . FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (38) return -> . RETURN expression PUNTO_Y_COMA
    (39) function_call -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    LLAVE_DER       shift and go to state 193
    ID              shift and go to state 132
    COUT            shift and go to state 134
    IF              shift and go to state 135
    WHILE           shift and go to state 136
    DO              shift and go to state 137
    FOR             shift and go to state 138
    RETURN          shift and go to state 139
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55

    expression                     shift and go to state 133
    statement                      shift and go to state 148
    assignment_statement           shift and go to state 123
    expression_statement           shift and go to state 124
    if                             shift and go to state 125
    while                          shift and go to state 126
    do_while                       shift and go to state 127
    for                            shift and go to state 128
    return                         shift and go to state 129
    function_call                  shift and go to state 130
    variable                       shift and go to state 131

state 189

    (36) do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ . expression PARENTESIS_DER PUNTO_Y_COMA
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 194

state 190

    (37) for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression . PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

    PUNTO_Y_COMA    shift and go to state 195
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88


state 191

    (50) assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 196


state 192

    (33) if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .
    (34) if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER . ELSE LLAVE_IZQ statement_list LLAVE_DER

    LLAVE_DER       reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    ID              reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    COUT            reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    IF              reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    WHILE           reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    DO              reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    FOR             reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    RETURN          reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    INT             reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    FLOAT           reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    CHAR            reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    DOUBLE          reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    BOOLEAN         reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    LONG            reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    STRING          reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    VOID            reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    NOT             reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    PARENTESIS_IZQ  reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    LLAVE_IZQ       reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    NUMERO          reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    CADENA          reduce using rule 33 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    ELSE            shift and go to state 197


state 193

    (35) while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .

    LLAVE_DER       reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    ID              reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    COUT            reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    IF              reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    WHILE           reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    DO              reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    FOR             reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    RETURN          reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    INT             reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    FLOAT           reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    CHAR            reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    DOUBLE          reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    BOOLEAN         reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    LONG            reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    STRING          reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    VOID            reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    NOT             reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    PARENTESIS_IZQ  reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    LLAVE_IZQ       reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    NUMERO          reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    CADENA          reduce using rule 35 (while -> WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)


state 194

    (36) do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression . PARENTESIS_DER PUNTO_Y_COMA
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

    PARENTESIS_DER  shift and go to state 198
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88


state 195

    (37) for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA . expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 199

state 196

    (50) assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .

    PUBLIC          reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    PRIVATE         reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    PROTECTED       reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    ID              reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    NUMERAL         reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    USING           reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    DEST            reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    INT             reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    FLOAT           reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    CHAR            reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    LONG            reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    STRING          reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    VOID            reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    LLAVE_DER       reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    COUT            reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    IF              reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    WHILE           reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    DO              reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    FOR             reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    RETURN          reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    NOT             reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    PARENTESIS_IZQ  reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    LLAVE_IZQ       reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    NUMERO          reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)
    CADENA          reduce using rule 50 (assignment_statement -> variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA .)


state 197

    (34) if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE . LLAVE_IZQ statement_list LLAVE_DER

    LLAVE_IZQ       shift and go to state 200


state 198

    (36) do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER . PUNTO_Y_COMA

    PUNTO_Y_COMA    shift and go to state 201


state 199

    (37) for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression . PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

    PUNTO_Y_COMA    shift and go to state 202
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88


state 200

    (34) if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ . statement_list LLAVE_DER
    (23) statement_list -> . statement
    (24) statement_list -> . statement_list statement
    (25) statement -> . assignment_statement
    (26) statement -> . expression_statement
    (27) statement -> . if
    (28) statement -> . while
    (29) statement -> . do_while
    (30) statement -> . for
    (31) statement -> . return
    (32) statement -> . function_call PUNTO_Y_COMA
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (60) expression_statement -> . expression PUNTO_Y_COMA
    (61) expression_statement -> . COUT PRINT expression PUNTO_Y_COMA
    (33) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (35) while -> . WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (36) do_while -> . DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA
    (37) for -> . FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (38) return -> . RETURN expression PUNTO_Y_COMA
    (39) function_call -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    ID              shift and go to state 132
    COUT            shift and go to state 134
    IF              shift and go to state 135
    WHILE           shift and go to state 136
    DO              shift and go to state 137
    FOR             shift and go to state 138
    RETURN          shift and go to state 139
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55

    expression                     shift and go to state 133
    statement_list                 shift and go to state 203
    statement                      shift and go to state 122
    assignment_statement           shift and go to state 123
    expression_statement           shift and go to state 124
    if                             shift and go to state 125
    while                          shift and go to state 126
    do_while                       shift and go to state 127
    for                            shift and go to state 128
    return                         shift and go to state 129
    function_call                  shift and go to state 130
    variable                       shift and go to state 131

state 201

    (36) do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .

    LLAVE_DER       reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    ID              reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    COUT            reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    IF              reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    WHILE           reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    DO              reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    FOR             reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    RETURN          reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    INT             reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    FLOAT           reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    CHAR            reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    DOUBLE          reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    BOOLEAN         reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    LONG            reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    STRING          reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    VOID            reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    NOT             reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    PARENTESIS_IZQ  reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    LLAVE_IZQ       reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    NUMERO          reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)
    CADENA          reduce using rule 36 (do_while -> DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA .)


state 202

    (37) for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA . expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55
    COUT            shift and go to state 56
    ID              shift and go to state 47

    expression                     shift and go to state 204

state 203

    (34) if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list . LLAVE_DER
    (24) statement_list -> statement_list . statement
    (25) statement -> . assignment_statement
    (26) statement -> . expression_statement
    (27) statement -> . if
    (28) statement -> . while
    (29) statement -> . do_while
    (30) statement -> . for
    (31) statement -> . return
    (32) statement -> . function_call PUNTO_Y_COMA
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (60) expression_statement -> . expression PUNTO_Y_COMA
    (61) expression_statement -> . COUT PRINT expression PUNTO_Y_COMA
    (33) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (35) while -> . WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (36) do_while -> . DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA
    (37) for -> . FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (38) return -> . RETURN expression PUNTO_Y_COMA
    (39) function_call -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    LLAVE_DER       shift and go to state 205
    ID              shift and go to state 132
    COUT            shift and go to state 134
    IF              shift and go to state 135
    WHILE           shift and go to state 136
    DO              shift and go to state 137
    FOR             shift and go to state 138
    RETURN          shift and go to state 139
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55

    expression                     shift and go to state 133
    statement                      shift and go to state 148
    assignment_statement           shift and go to state 123
    expression_statement           shift and go to state 124
    if                             shift and go to state 125
    while                          shift and go to state 126
    do_while                       shift and go to state 127
    for                            shift and go to state 128
    return                         shift and go to state 129
    function_call                  shift and go to state 130
    variable                       shift and go to state 131

state 204

    (37) for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression . PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (62) expression -> expression . SUMA expression
    (63) expression -> expression . RESTA expression
    (64) expression -> expression . MULTIPLICACION expression
    (65) expression -> expression . DIVISION expression
    (66) expression -> expression . MENOR_IGUAL expression
    (67) expression -> expression . MAYOR_IGUAL expression
    (68) expression -> expression . IGUAL expression
    (69) expression -> expression . DISTINTO expression
    (70) expression -> expression . AND expression
    (71) expression -> expression . OR expression
    (77) expression -> expression . PRINT expression
    (79) expression -> expression . MENOR expression
    (80) expression -> expression . MAYOR expression
    (81) expression -> expression . SUMA SUMA

    PARENTESIS_DER  shift and go to state 206
    SUMA            shift and go to state 76
    RESTA           shift and go to state 77
    MULTIPLICACION  shift and go to state 78
    DIVISION        shift and go to state 79
    MENOR_IGUAL     shift and go to state 80
    MAYOR_IGUAL     shift and go to state 81
    IGUAL           shift and go to state 82
    DISTINTO        shift and go to state 83
    AND             shift and go to state 84
    OR              shift and go to state 85
    PRINT           shift and go to state 86
    MENOR           shift and go to state 87
    MAYOR           shift and go to state 88


state 205

    (34) if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .

    LLAVE_DER       reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    ID              reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    COUT            reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    IF              reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    WHILE           reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    DO              reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    FOR             reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    RETURN          reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    INT             reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    FLOAT           reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    CHAR            reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    DOUBLE          reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    BOOLEAN         reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    LONG            reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    STRING          reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    VOID            reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    NOT             reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    PARENTESIS_IZQ  reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    LLAVE_IZQ       reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    NUMERO          reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)
    CADENA          reduce using rule 34 (if -> IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER .)


state 206

    (37) for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER . LLAVE_IZQ statement_list LLAVE_DER

    LLAVE_IZQ       shift and go to state 207


state 207

    (37) for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ . statement_list LLAVE_DER
    (23) statement_list -> . statement
    (24) statement_list -> . statement_list statement
    (25) statement -> . assignment_statement
    (26) statement -> . expression_statement
    (27) statement -> . if
    (28) statement -> . while
    (29) statement -> . do_while
    (30) statement -> . for
    (31) statement -> . return
    (32) statement -> . function_call PUNTO_Y_COMA
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (60) expression_statement -> . expression PUNTO_Y_COMA
    (61) expression_statement -> . COUT PRINT expression PUNTO_Y_COMA
    (33) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (35) while -> . WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (36) do_while -> . DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA
    (37) for -> . FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (38) return -> . RETURN expression PUNTO_Y_COMA
    (39) function_call -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    ID              shift and go to state 132
    COUT            shift and go to state 134
    IF              shift and go to state 135
    WHILE           shift and go to state 136
    DO              shift and go to state 137
    FOR             shift and go to state 138
    RETURN          shift and go to state 139
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55

    variable                       shift and go to state 131
    expression                     shift and go to state 133
    statement_list                 shift and go to state 208
    statement                      shift and go to state 122
    assignment_statement           shift and go to state 123
    expression_statement           shift and go to state 124
    if                             shift and go to state 125
    while                          shift and go to state 126
    do_while                       shift and go to state 127
    for                            shift and go to state 128
    return                         shift and go to state 129
    function_call                  shift and go to state 130

state 208

    (37) for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list . LLAVE_DER
    (24) statement_list -> statement_list . statement
    (25) statement -> . assignment_statement
    (26) statement -> . expression_statement
    (27) statement -> . if
    (28) statement -> . while
    (29) statement -> . do_while
    (30) statement -> . for
    (31) statement -> . return
    (32) statement -> . function_call PUNTO_Y_COMA
    (48) assignment_statement -> . variable ID PUNTO_Y_COMA
    (49) assignment_statement -> . variable ID ASIGNACION expression PUNTO_Y_COMA
    (50) assignment_statement -> . variable ID CORCHETE_IZQ expression CORCHETE_DER ASIGNACION LLAVE_IZQ argument_list LLAVE_DER PUNTO_Y_COMA
    (51) assignment_statement -> . ID ASIGNACION expression PUNTO_Y_COMA
    (60) expression_statement -> . expression PUNTO_Y_COMA
    (61) expression_statement -> . COUT PRINT expression PUNTO_Y_COMA
    (33) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (34) if -> . IF PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER ELSE LLAVE_IZQ statement_list LLAVE_DER
    (35) while -> . WHILE PARENTESIS_IZQ expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (36) do_while -> . DO LLAVE_IZQ statement_list LLAVE_DER WHILE PARENTESIS_IZQ expression PARENTESIS_DER PUNTO_Y_COMA
    (37) for -> . FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER
    (38) return -> . RETURN expression PUNTO_Y_COMA
    (39) function_call -> . ID PARENTESIS_IZQ argument_list PARENTESIS_DER
    (52) variable -> . INT
    (53) variable -> . FLOAT
    (54) variable -> . CHAR
    (55) variable -> . DOUBLE
    (56) variable -> . BOOLEAN
    (57) variable -> . LONG
    (58) variable -> . STRING
    (59) variable -> . VOID
    (62) expression -> . expression SUMA expression
    (63) expression -> . expression RESTA expression
    (64) expression -> . expression MULTIPLICACION expression
    (65) expression -> . expression DIVISION expression
    (66) expression -> . expression MENOR_IGUAL expression
    (67) expression -> . expression MAYOR_IGUAL expression
    (68) expression -> . expression IGUAL expression
    (69) expression -> . expression DISTINTO expression
    (70) expression -> . expression AND expression
    (71) expression -> . expression OR expression
    (72) expression -> . NOT expression
    (73) expression -> . PARENTESIS_IZQ expression PARENTESIS_DER
    (74) expression -> . LLAVE_IZQ expression LLAVE_DER
    (75) expression -> . NUMERO
    (76) expression -> . CADENA
    (77) expression -> . expression PRINT expression
    (78) expression -> . COUT PRINT expression
    (79) expression -> . expression MENOR expression
    (80) expression -> . expression MAYOR expression
    (81) expression -> . expression SUMA SUMA
    (82) expression -> . ID

    LLAVE_DER       shift and go to state 209
    ID              shift and go to state 132
    COUT            shift and go to state 134
    IF              shift and go to state 135
    WHILE           shift and go to state 136
    DO              shift and go to state 137
    FOR             shift and go to state 138
    RETURN          shift and go to state 139
    INT             shift and go to state 45
    FLOAT           shift and go to state 11
    CHAR            shift and go to state 12
    DOUBLE          shift and go to state 13
    BOOLEAN         shift and go to state 14
    LONG            shift and go to state 15
    STRING          shift and go to state 16
    VOID            shift and go to state 17
    NOT             shift and go to state 53
    PARENTESIS_IZQ  shift and go to state 48
    LLAVE_IZQ       shift and go to state 50
    NUMERO          shift and go to state 54
    CADENA          shift and go to state 55

    variable                       shift and go to state 131
    expression                     shift and go to state 133
    statement                      shift and go to state 148
    assignment_statement           shift and go to state 123
    expression_statement           shift and go to state 124
    if                             shift and go to state 125
    while                          shift and go to state 126
    do_while                       shift and go to state 127
    for                            shift and go to state 128
    return                         shift and go to state 129
    function_call                  shift and go to state 130

state 209

    (37) for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .

    LLAVE_DER       reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    ID              reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    COUT            reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    IF              reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    WHILE           reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    DO              reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    FOR             reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    RETURN          reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    INT             reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    FLOAT           reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    CHAR            reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    DOUBLE          reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    BOOLEAN         reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    LONG            reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    STRING          reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    VOID            reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    NOT             reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    PARENTESIS_IZQ  reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    LLAVE_IZQ       reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    NUMERO          reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)
    CADENA          reduce using rule 37 (for -> FOR PARENTESIS_IZQ variable ID ASIGNACION expression PUNTO_Y_COMA expression PUNTO_Y_COMA expression PARENTESIS_DER LLAVE_IZQ statement_list LLAVE_DER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PUBLIC in state 26 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 26 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 26 resolved as shift
WARNING: shift/reduce conflict for ID in state 26 resolved as shift
WARNING: shift/reduce conflict for NUMERAL in state 26 resolved as shift
WARNING: shift/reduce conflict for USING in state 26 resolved as shift
WARNING: shift/reduce conflict for DEST in state 26 resolved as shift
WARNING: shift/reduce conflict for INT in state 26 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 26 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 26 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 26 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 26 resolved as shift
WARNING: shift/reduce conflict for LONG in state 26 resolved as shift
WARNING: shift/reduce conflict for STRING in state 26 resolved as shift
WARNING: shift/reduce conflict for VOID in state 26 resolved as shift
WARNING: shift/reduce conflict for LLAVE_DER in state 32 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 32 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 32 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 32 resolved as shift
WARNING: shift/reduce conflict for ID in state 32 resolved as shift
WARNING: shift/reduce conflict for NUMERAL in state 32 resolved as shift
WARNING: shift/reduce conflict for USING in state 32 resolved as shift
WARNING: shift/reduce conflict for DEST in state 32 resolved as shift
WARNING: shift/reduce conflict for INT in state 32 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 32 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 32 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 32 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 32 resolved as shift
WARNING: shift/reduce conflict for LONG in state 32 resolved as shift
WARNING: shift/reduce conflict for STRING in state 32 resolved as shift
WARNING: shift/reduce conflict for VOID in state 32 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 35 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 35 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 35 resolved as shift
WARNING: shift/reduce conflict for ID in state 35 resolved as shift
WARNING: shift/reduce conflict for NUMERAL in state 35 resolved as shift
WARNING: shift/reduce conflict for USING in state 35 resolved as shift
WARNING: shift/reduce conflict for DEST in state 35 resolved as shift
WARNING: shift/reduce conflict for INT in state 35 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 35 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 35 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 35 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 35 resolved as shift
WARNING: shift/reduce conflict for LONG in state 35 resolved as shift
WARNING: shift/reduce conflict for STRING in state 35 resolved as shift
WARNING: shift/reduce conflict for VOID in state 35 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 36 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 36 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 36 resolved as shift
WARNING: shift/reduce conflict for ID in state 36 resolved as shift
WARNING: shift/reduce conflict for NUMERAL in state 36 resolved as shift
WARNING: shift/reduce conflict for USING in state 36 resolved as shift
WARNING: shift/reduce conflict for DEST in state 36 resolved as shift
WARNING: shift/reduce conflict for INT in state 36 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 36 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 36 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 36 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 36 resolved as shift
WARNING: shift/reduce conflict for LONG in state 36 resolved as shift
WARNING: shift/reduce conflict for STRING in state 36 resolved as shift
WARNING: shift/reduce conflict for VOID in state 36 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 37 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 37 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 37 resolved as shift
WARNING: shift/reduce conflict for ID in state 37 resolved as shift
WARNING: shift/reduce conflict for NUMERAL in state 37 resolved as shift
WARNING: shift/reduce conflict for USING in state 37 resolved as shift
WARNING: shift/reduce conflict for DEST in state 37 resolved as shift
WARNING: shift/reduce conflict for INT in state 37 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 37 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 37 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 37 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 37 resolved as shift
WARNING: shift/reduce conflict for LONG in state 37 resolved as shift
WARNING: shift/reduce conflict for STRING in state 37 resolved as shift
WARNING: shift/reduce conflict for VOID in state 37 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 38 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 38 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 38 resolved as shift
WARNING: shift/reduce conflict for ID in state 38 resolved as shift
WARNING: shift/reduce conflict for NUMERAL in state 38 resolved as shift
WARNING: shift/reduce conflict for USING in state 38 resolved as shift
WARNING: shift/reduce conflict for DEST in state 38 resolved as shift
WARNING: shift/reduce conflict for INT in state 38 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 38 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 38 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 38 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 38 resolved as shift
WARNING: shift/reduce conflict for LONG in state 38 resolved as shift
WARNING: shift/reduce conflict for STRING in state 38 resolved as shift
WARNING: shift/reduce conflict for VOID in state 38 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 64 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 64 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 64 resolved as shift
WARNING: shift/reduce conflict for ID in state 64 resolved as shift
WARNING: shift/reduce conflict for NUMERAL in state 64 resolved as shift
WARNING: shift/reduce conflict for USING in state 64 resolved as shift
WARNING: shift/reduce conflict for DEST in state 64 resolved as shift
WARNING: shift/reduce conflict for INT in state 64 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 64 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLE in state 64 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 64 resolved as shift
WARNING: shift/reduce conflict for LONG in state 64 resolved as shift
WARNING: shift/reduce conflict for STRING in state 64 resolved as shift
WARNING: shift/reduce conflict for VOID in state 64 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 89 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 89 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 89 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 89 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for DISTINTO in state 89 resolved as shift
WARNING: shift/reduce conflict for AND in state 89 resolved as shift
WARNING: shift/reduce conflict for OR in state 89 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 89 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 89 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 89 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 111 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 111 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 111 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 111 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 111 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 111 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 111 resolved as shift
WARNING: shift/reduce conflict for DISTINTO in state 111 resolved as shift
WARNING: shift/reduce conflict for AND in state 111 resolved as shift
WARNING: shift/reduce conflict for OR in state 111 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 111 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 111 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 111 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 112 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 112 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 112 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 112 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 112 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 112 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 112 resolved as shift
WARNING: shift/reduce conflict for DISTINTO in state 112 resolved as shift
WARNING: shift/reduce conflict for AND in state 112 resolved as shift
WARNING: shift/reduce conflict for OR in state 112 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 112 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 112 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 112 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 113 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 113 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 113 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 113 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 113 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 113 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 113 resolved as shift
WARNING: shift/reduce conflict for DISTINTO in state 113 resolved as shift
WARNING: shift/reduce conflict for AND in state 113 resolved as shift
WARNING: shift/reduce conflict for OR in state 113 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 113 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 113 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 113 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 114 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 114 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 114 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 114 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 114 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 114 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 114 resolved as shift
WARNING: shift/reduce conflict for DISTINTO in state 114 resolved as shift
WARNING: shift/reduce conflict for AND in state 114 resolved as shift
WARNING: shift/reduce conflict for OR in state 114 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 114 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 114 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 114 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 115 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 115 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 115 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 115 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 115 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 115 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 115 resolved as shift
WARNING: shift/reduce conflict for DISTINTO in state 115 resolved as shift
WARNING: shift/reduce conflict for AND in state 115 resolved as shift
WARNING: shift/reduce conflict for OR in state 115 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 115 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 115 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 115 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 116 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 116 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 116 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 116 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for DISTINTO in state 116 resolved as shift
WARNING: shift/reduce conflict for AND in state 116 resolved as shift
WARNING: shift/reduce conflict for OR in state 116 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 116 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 116 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 116 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 117 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 117 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 117 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 117 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for DISTINTO in state 117 resolved as shift
WARNING: shift/reduce conflict for AND in state 117 resolved as shift
WARNING: shift/reduce conflict for OR in state 117 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 117 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 117 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 117 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 118 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 118 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 118 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 118 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for DISTINTO in state 118 resolved as shift
WARNING: shift/reduce conflict for AND in state 118 resolved as shift
WARNING: shift/reduce conflict for OR in state 118 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 118 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 118 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 118 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 119 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 119 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 119 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 119 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for DISTINTO in state 119 resolved as shift
WARNING: shift/reduce conflict for AND in state 119 resolved as shift
WARNING: shift/reduce conflict for OR in state 119 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 119 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 119 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 119 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 120 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 120 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 120 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 120 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for DISTINTO in state 120 resolved as shift
WARNING: shift/reduce conflict for AND in state 120 resolved as shift
WARNING: shift/reduce conflict for OR in state 120 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 120 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 120 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 120 resolved as shift
WARNING: shift/reduce conflict for PUNTO_Y_COMA in state 165 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 165 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 165 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 165 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 165 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL in state 165 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL in state 165 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 165 resolved as shift
WARNING: shift/reduce conflict for DISTINTO in state 165 resolved as shift
WARNING: shift/reduce conflict for AND in state 165 resolved as shift
WARNING: shift/reduce conflict for OR in state 165 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 165 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 165 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 165 resolved as shift
